{"version":3,"file":"static/chunks/7862.23a45828e752df3c.js","mappings":"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","sources":["webpack://_N_E/./content/Links.ts","webpack://_N_E/./src/components/event/NewArenaCard.tsx","webpack://_N_E/<anon>"],"sourcesContent":["export const InternalLinks = {\n  LANDING_PAGE: \"/\",\n  SIGNIN_PAGE: \"/signin\",\n  SIGNUP_PAGE: \"/signup\",\n  ONBOARDING_PAGE: \"/onboarding\",\n  DEV_DASHBOARD: \"/Dashboards/Dev/\",\n  USER_DASHBOARD: \"/Dashboards/User/\",\n  ADMIN_DASHBOARD: \"/Dashboards/Admin/\",\n\n  EXPLORE_PAGE: \"/Explore/\",\n  ORGANISE_PAGE: \"/Explore/Organise\",\n  LABS_PAGE: \"/Explore/Labs/\",\n\n  CODEARENA_DASHBOARD_LINK: \"/Explore/CodeArena/Dashboard/\",\n  CODEARENA_DASHBOARD_ROUTE: \"/Explore/CodeArena/Dashboard/\",\n  CODEARENA_EDITCODEARENA: \"/Explore/CodeArena/EditCodeArena/\",\n  CODEARENA_PREVIEW: \"/Explore/CodeArena/Preview/\",\n  HACK_DASHBOARD_LINK: \"/Explore/Hack/Dashboard/\",\n  HACK_DASHBOARD_ROUTE: \"/Explore/Hack/Dashboard/\",\n  HACK_EDITHACK: \"/Explore/Hack/EditHack/\",\n  HACK_EDITHACK_ROUTE: \"/Explore/Hack/EditHack/\",\n  HACK_PREVIEW: \"/Explore/Hack/Preview/\",\n\n  BLOGS_PAGE: \"/blog\",\n  CAREERS_PAGE: \"/About/Careers\",\n  COMPANY_PAGE: \"/About/Company\",\n  CONTACT_US_PAGE: \"/About/ContactUs\",\n  REVIEWS_PRESS_PAGE: \"/About/ReviewsPress\",\n  TERMS_PRIVACY_PAGE: \"/About/TermsPrivacy\",\n  TERMS_CONDITIONS_PAGE: \"/About/TermsConditions\",\n  HIRE_DEVS_PAGE: \"/Customers/Hire-Devs\",\n  OUTSOURCE_PAGE: \"/Customers/Outsource\",\n  PRICING_PAGE: \"/Customers/Pricing\",\n  SPONSOR_PAGE: \"/Customers/Sponsor\",\n  EXTENSIONS_PAGE: \"/Product/Extensions\",\n  CHANGE_LOG_PAGE: \"/Product/ChangeLog\",\n  PLAYGROUND_PAGE: \"/Product/Playground\",\n  REQUEST_FEATURE_PAGE: \"/Product/RequestFeature\",\n  STATUS_PAGE: \"/Product/Status\",\n  COMET_PROFILE_PAGE: \"/Developers/Profile\",\n  COMMUNITY_PAGE: \"/Developers/Community/\",\n  EVANGELISTS_PAGE: \"/Developers/Evangelists/\",\n  GET_HIRED_PAGE: \"/Developers/GetHired\",\n\n  PROFILE_PAGE: \"/Dashboards/Dev/\"\n};\n\nexport const externalLinkProps = {\n  target: \"_blank\",\n  rel: \"noopener noreferrer\",\n};\n\nexport const ExternalLinks = {\n  BLOGS_PAGE: {\n    href: \"https://cometlabs.in/About/Blogs\",\n    ...externalLinkProps,\n  },\n  LABS_PAGE: {\n    href: \"https://cometlabs.in/lab/\",\n    ...externalLinkProps,\n  },\n  CAREERS_PAGE: {\n    href: \"https://cometlabs.in/About/Careers\",\n    ...externalLinkProps,\n  },\n  COMPANY_PAGE: {\n    href: \"https://cometlabs.in/About/Company\",\n    ...externalLinkProps,\n  },\n  CONTACT_US_PAGE: {\n    href: \"https://cometlabs.in/About/ContactUs\",\n    ...externalLinkProps,\n  },\n  REVIEWS_PRESS_PAGE: {\n    href: \"https://cometlabs.in/About/ReviewsPress\",\n    ...externalLinkProps,\n  },\n  TERMS_PRIVACY_PAGE: {\n    href: \"https://cometlabs.in/About/TermsPrivacy\",\n    ...externalLinkProps,\n  },\n  TERMS_CONDITIONS_PAGE: {\n    href: \"https://cometlabs.in/About/TermsConditions\",\n    ...externalLinkProps,\n  },\n  HIRE_DEVS_PAGE: {\n    href: \"https://cometlabs.in/Customers/Hire-Devs\",\n    ...externalLinkProps,\n  },\n  OUTSOURCE_PAGE: {\n    href: \"https://cometlabs.in/Customers/Outsource\",\n    ...externalLinkProps,\n  },\n  PRICING_PAGE: {\n    href: \"https://cometlabs.in/Customers/Pricing\",\n    ...externalLinkProps,\n  },\n  SPONSOR_PAGE: {\n    href: \"https://cometlabs.in/Customers/Sponsor\",\n    ...externalLinkProps,\n  },\n  EXTENSIONS_PAGE: {\n    href: \"https://cometlabs.in/Product/Extensions\",\n    ...externalLinkProps,\n  },\n  CHANGE_LOG_PAGE: {\n    href: \"https://cometlabs.in/Product/ChangeLog\",\n    ...externalLinkProps,\n  },\n  PLAYGROUND_PAGE: {\n    href: \"https://cometlabs.in/Product/Playground\",\n    ...externalLinkProps,\n  },\n  REQUEST_FEATURE_PAGE: {\n    href: \"https://cometlabs.in/Product/RequestFeature\",\n    ...externalLinkProps,\n  },\n  STATUS_PAGE: {\n    href: \"https://cometlabs.in/Product/Status\",\n    ...externalLinkProps,\n  },\n  COMET_PROFILE_PAGE: {\n    href: \"https://cometlabs.in/Developers/Profile\",\n    ...externalLinkProps,\n  },\n  COMMUNITY_PAGE: {\n    href: \"https://cometlabs.in/Developers/Community\",\n    ...externalLinkProps,\n  },\n  EVANGELISTS_PAGE: {\n    href: \"https://cometlabs.in/Developers/Evangelists\",\n    ...externalLinkProps,\n  },\n  GET_HIRED_PAGE: {\n    href: \"https://cometlabs.in/Developers/GetHired\",\n    ...externalLinkProps,\n  },\n  COMETLABS_FACEBOOK: {\n    href: \"https://www.facebook.com/cometlabs.in/\",\n    ...externalLinkProps,\n  },\n  COMETLABS_INSTAGRAM: {\n    href: \"https://www.instagram.com/cometlabs/\",\n    ...externalLinkProps,\n  },\n  COMETLABS_LINKEDIN: {\n    href: \"https://www.linkedin.com/company/cometlabs/\",\n    ...externalLinkProps,\n  },\n  COMETLABS_TWITTER: {\n    href: \"https://twitter.com/cometlabs_ai\",\n    ...externalLinkProps,\n  },\n  COMETLABS_LINKTREE: {\n    href: \"https://linktr.ee/cometlabs\",\n    ...externalLinkProps,\n  },\n  COMETLABS_YOUTUBE: {\n    href: \"https://www.youtube.com/channel/UC9dP1nUtKZnP4Q3YtLTXVLQ\",\n    ...externalLinkProps,\n  },\n};\n","import { Typography, Stack, Modal, Grid, styled, Paper, TextField, MenuItem, IconButton } from '@mui/material';\nimport React from 'react';\nimport { Controller, useFormContext } from 'react-hook-form';\nimport { HiOutlinePlusCircle } from 'react-icons/hi';\nimport { CodeArena } from './types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { DefaultUser } from \"@/backend/functions\";\nimport { useSession } from \"next-auth/react\";\nimport { useSnackbar } from \"notistack\";\nimport { useRouter } from \"next/router\";\nimport { InternalLinks } from '@/content/Links';\nimport { FilledButton, OutlinedButton, CardContainer } from '@/styles/theme';\n// import Image from 'next/image';\n\nconst NewCardContainer = styled(Paper)(({ theme }) => ({\n    width: 350,\n    minHeight: 457,\n    padding: \"20px\",\n    margin: \"20px auto\",\n    // border: \"1px solid rgba(255, 255, 255, 0.2)\",\n    display: 'flex',\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    // backgroundColor: \"rgba(0, 0, 0, 0.08)\"\n    border: 0,\n    backgroundColor: theme.palette.newbackground.main,\n}));\n\n\n\nconst CreateNewCard = () => {\n    const [open, setOpen] = React.useState(false);\n    const { trigger, getValues } = useFormContext();\n    const data = [\"name\", \"type\", \"mode\"];\n    const { data: session } = useSession();\n    const user: DefaultUser = session?.user as DefaultUser;\n    const { enqueueSnackbar } = useSnackbar();\n    const router = useRouter();\n    // const [color, setColor] = React.useState(\"#1b1b1b\");\n\n    // React.useEffect(() => {\n\n    //     const data = localStorage.getItem('theme');\n    //     if (data == \"0\" || 0) {\n    //         setColor(\"#1b1b1b\");\n    //     } else {\n    //         setColor(\"#060606\");\n    //     }\n\n    // }, [])\n\n    const handleSubmit = async (_e: any) => {\n        const isValid = await trigger(data);\n        if (isValid) {\n            const values = getValues(data);\n            const Data: CodeArena = {\n                festId: uuidv4(),\n                details: { title: values[0], startDate: \"\", endDate: \"\", imageUrl: \"\", tags: [], regStartDate: \"\", regEndDate: \"\", desc: \"\" },\n                organiser: {\n                    imageUrl: \"\",\n                    title: \"\",\n                    description: \"\",\n                    facebookUrl: \"\",\n                    linkedinUrl: \"\",\n                    twitterUrl: \"\",\n                    instagramUrl: \"\",\n                    mobile: \"\",\n                    email: \"\",\n                },\n                description: {\n                    description: \"\",\n                    videoUrl: \"\",\n                },\n                type: values[1],\n                mode: values[2],\n                count: 0\n            };\n            try {\n                const accessToken = \"Token \" + user.accessToken;\n                let res = await fetch(\n                    process.env.NEXT_PUBLIC_API_URL + \"/fests/createFestRequest\",\n                    {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json;charset=utf-8\",\n                            Authorization: accessToken,\n                        },\n                        body: JSON.stringify({ festObj: Data }),\n                    }\n                );\n                if (res.ok) {\n                    const { success, error } = await res.json();\n                    if (!!success) {\n                        enqueueSnackbar(`${Data.type} Created`, { variant: \"success\" })\n                        router.push(InternalLinks.LANDING_PAGE + `/Explore/${Data.type}/Edit${Data.type}/` + Data.festId + \"/edit\")\n\n                        localStorage.removeItem(\"CodeArenaData\");\n                    } else {\n                        console.log(error);\n                    }\n                } else {\n                    throw new Error(\"ON CodeArena DETAIL SAVE: ERROR\");\n                }\n            } catch (error) {\n                console.log(\"CodeArena details could not be saved\");\n            }\n            setOpen(false)\n        }\n    };\n\n\n\n    return (\n        <>\n            <Modal open={open}>\n                <Grid container>\n                    <Grid item sx={{ borderRadius: \"4px\", textAlign: \"center\", position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\", justifyContent: \"space-between\", alignContent: \"center\" }} xs={10} md={4}>\n                        <CardContainer sx={{ borderRadius: \"4px\" }}>\n                            <Stack rowGap={6} sx={{ margin: \"40px\" }}>\n                                <Typography variant=\"TitleLarge\">\n                                    Organise Hackathon, CodeArena and Labs for your Technical Community, College or your Enterprise\n                                </Typography>\n                                <Grid\n                                    container\n                                    alignItems=\"flex-end\"\n                                    justifyContent=\"space-between\"\n                                    spacing={3}\n                                >\n                                    <Grid item xs={12} sx={{ textAlign: 'left' }}>\n                                        <Controller\n                                            name=\"name\"\n                                            defaultValue={\"\"}\n                                            rules={{\n                                                required: \"Please provide a title for your event\",\n                                            }}\n                                            render={({ field: { ref, ...field }, fieldState: { error } }) => (\n                                                <TextField\n                                                    fullWidth\n                                                    label=\"Enter Event Name\"\n                                                    variant=\"outlined\"\n                                                    inputProps={{\n                                                        style: {\n                                                            fontWeight: 400,\n                                                            fontSize: \"16px\",\n                                                            lineHeight: \"24px\",\n                                                        }\n                                                    }}\n                                                    InputLabelProps={{\n                                                        style: {\n                                                            fontWeight: 500,\n                                                            fontSize: \"14px\",\n                                                            lineHeight: \"20px\",\n                                                        }\n                                                    }}\n                                                    error={!!error}\n                                                    helperText={error ? error.message : null}\n                                                    {...field}\n                                                />\n                                            )}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sx={{ textAlign: 'left' }}>\n                                        <Controller\n                                            name=\"type\"\n                                            defaultValue={\"\"}\n                                            render={({ field: { ref, ...field }, fieldState: { error } }) => (\n                                                <TextField\n                                                    select\n                                                    placeholder={\"Select Type\"}\n                                                    fullWidth\n                                                    label=\"Select Event Type\"\n                                                    inputProps={{\n                                                        style: {\n                                                            fontWeight: 400,\n                                                            fontSize: \"16px\",\n                                                            lineHeight: \"24px\",\n                                                        }\n                                                    }}\n                                                    InputLabelProps={{\n                                                        style: {\n                                                            fontWeight: 500,\n                                                            fontSize: \"14px\",\n                                                            lineHeight: \"20px\",\n                                                        }\n                                                    }}\n                                                    {...field}\n                                                    error={!!error}\n                                                    {...field}\n                                                    ref={null}\n                                                >\n                                                    <MenuItem value={\"Hackathon\"}>{\"Hackathon\"}</MenuItem>\n                                                    <MenuItem value={\"CodeArena\"}>{\"CodeArena\"}</MenuItem>\n                                                    <MenuItem value={\"Labs\"}>{\"Labs\"}</MenuItem>\n                                                </TextField>\n                                            )}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sx={{ textAlign: 'left' }}>\n                                        <Controller\n                                            name=\"mode\"\n                                            render={({ field: { ref, ...field }, fieldState: { error } }) => (\n                                                <TextField\n                                                    select\n                                                    label=\"Enter Event Mode\"\n                                                    fullWidth\n                                                    {...field}\n                                                    inputProps={{\n                                                        style: {\n                                                            fontWeight: 400,\n                                                            fontSize: \"16px\",\n                                                            lineHeight: \"24px\",\n                                                        }\n                                                    }}\n                                                    InputLabelProps={{\n                                                        style: {\n                                                            fontWeight: 500,\n                                                            fontSize: \"14px\",\n                                                            lineHeight: \"20px\",\n                                                        }\n                                                    }}\n                                                    error={!!error}\n                                                    {...field}\n                                                    ref={null}\n                                                >\n                                                    <MenuItem value={\"Online\"}>{\"Online\"}</MenuItem>\n                                                    <MenuItem value={\"Offline\"}>{\"Offline\"}</MenuItem>\n                                                </TextField>\n                                            )}\n                                        />\n                                    </Grid>\n                                </Grid>\n                                <Stack direction=\"row\" sx={{ justifyContent: \"space-evenly\", display: \"flex\", flexDirection: \"row\", mb: \"10px\" }}>\n                                    <FilledButton\n                                        type=\"submit\"\n                                        onClick={(e) => handleSubmit(e)}\n                                        variant=\"contained\">\n                                        <Typography variant=\"LabelLarge\" >\n                                            Proceed\n                                        </Typography>\n                                    </FilledButton>\n                                    <OutlinedButton onClick={() => setOpen(false)} variant=\"outlined\">\n                                        <Typography variant=\"LabelLarge\" >\n                                            Cancel\n                                        </Typography>\n                                    </OutlinedButton>\n                                </Stack>\n                            </Stack>\n                        </CardContainer>\n                    </Grid>\n                </Grid>\n            </Modal>\n            <NewCardContainer elevation={1} sx={{ cursor: \"pointer\", transition: \"transform 0.3s\", ':hover': { transform: \"scale(1.05)\" } }} onClick={() => { setOpen(true) }}>\n                <Typography variant=\"TitleLarge\" sx={{ mb: 2, textAlign: \"center\" }} color=\"primary\">Create a New Hackathon, CodeArena & Labs</Typography>\n                <IconButton disabled>\n                    <HiOutlinePlusCircle style={{ fontSize: \"5rem\" }} />\n                </IconButton>\n            </NewCardContainer>\n        </>\n    )\n}\n\nexport default CreateNewCard;\n\n\n// Router.push(InternalLinks.ORGANIZE_NEW)"],"names":["InternalLinks","LANDING_PAGE","SIGNIN_PAGE","SIGNUP_PAGE","ONBOARDING_PAGE","DEV_DASHBOARD","USER_DASHBOARD","ADMIN_DASHBOARD","EXPLORE_PAGE","ORGANISE_PAGE","LABS_PAGE","CODEARENA_DASHBOARD_LINK","CODEARENA_DASHBOARD_ROUTE","CODEARENA_EDITCODEARENA","CODEARENA_PREVIEW","HACK_DASHBOARD_LINK","HACK_DASHBOARD_ROUTE","HACK_EDITHACK","HACK_EDITHACK_ROUTE","HACK_PREVIEW","BLOGS_PAGE","CAREERS_PAGE","COMPANY_PAGE","CONTACT_US_PAGE","REVIEWS_PRESS_PAGE","TERMS_PRIVACY_PAGE","TERMS_CONDITIONS_PAGE","HIRE_DEVS_PAGE","OUTSOURCE_PAGE","PRICING_PAGE","SPONSOR_PAGE","EXTENSIONS_PAGE","CHANGE_LOG_PAGE","PLAYGROUND_PAGE","REQUEST_FEATURE_PAGE","STATUS_PAGE","COMET_PROFILE_PAGE","COMMUNITY_PAGE","EVANGELISTS_PAGE","GET_HIRED_PAGE","PROFILE_PAGE","externalLinkProps","target","rel","ExternalLinks","href","COMETLABS_FACEBOOK","COMETLABS_INSTAGRAM","COMETLABS_LINKEDIN","COMETLABS_TWITTER","COMETLABS_LINKTREE","COMETLABS_YOUTUBE","NewCardContainer","styled","Paper","theme","param","width","minHeight","padding","margin","display","flexDirection","justifyContent","alignItems","border","backgroundColor","palette","newbackground","main","CreateNewCard","open","setOpen","React","trigger","getValues","useFormContext","data","session","useSession","user","enqueueSnackbar","useSnackbar","router","useRouter","handleSubmit","_e","isValid","values","Data","festId","uuidv4","details","title","startDate","endDate","imageUrl","tags","regStartDate","regEndDate","desc","organiser","description","facebookUrl","linkedinUrl","twitterUrl","instagramUrl","mobile","email","videoUrl","type","mode","count","accessToken","res","fetch","process","method","headers","Authorization","body","JSON","stringify","festObj","ok","success","error","json","concat","variant","push","localStorage","removeItem","console","log","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Fragment","jsx","Modal","Grid","container","item","sx","borderRadius","textAlign","position","top","left","transform","alignContent","xs","md","CardContainer","Stack","rowGap","Typography","spacing","Controller","name","defaultValue","rules","required","render","field","ref","fieldState","TextField","fullWidth","label","inputProps","style","fontWeight","fontSize","lineHeight","InputLabelProps","helperText","message","select","placeholder","MenuItem","value","direction","mb","FilledButton","onClick","e","OutlinedButton","elevation","cursor","transition","color","IconButton","disabled","HiOutlinePlusCircle","__webpack_exports__"],"sourceRoot":""}