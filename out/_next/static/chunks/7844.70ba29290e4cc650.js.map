{"version":3,"file":"static/chunks/7844.70ba29290e4cc650.js","mappings":"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","sources":["webpack://_N_E/./src/layout/ShortDashboard.tsx","webpack://_N_E/./src/components/MainArea/GitArea.tsx","webpack://_N_E/./src/components/MainArea/BuildFirstHackArea.tsx","webpack://_N_E/./src/components/MainArea/PlaygroundArea.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import * as React from \"react\";\nimport {\n  Box,\n  Tab,\n  Tabs,\n  Typography,\n} from \"@mui/material\";\n\nconst drawerWidth = 200;\n\nfunction a11yProps(index: number) {\n  return {\n    id: `vertical-tab-${index}`,\n    \"aria-controls\": `vertical-tabpanel-${index}`,\n  };\n}\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  dir?: string;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && <>{children}</>}\n    </div>\n  );\n}\n\nexport interface DashboardProps {\n  tabs: Array<{\n    label: React.ReactNode;\n    component: React.ReactNode;\n  }>;\n}\n\nexport default function ShortDashboard(props: DashboardProps) {\n  const { tabs } = props;\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n\n  const handleChange = (_event: React.SyntheticEvent, newValue: number) => {\n    setSelectedIndex(newValue);\n  };\n\n  return (\n    <div\n      style={{ display: \"flex\", width: \"100%\" }}\n    >\n      <Box\n        sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            height: \"100%\",\n            maxHeight: \"400px\",\n            maxWidth: \"200px\"\n          }}\n        >\n          <Tabs\n            orientation=\"vertical\"\n            variant=\"scrollable\"\n            value={selectedIndex}\n            onChange={handleChange}\n            TabIndicatorProps={{\n              style: {\n                width: \"0px\",\n                color: \"onsurfacevariant.main\"\n              },\n            }}\n            sx={{\n              borderTop: \"1px solid rgba(255, 255, 255, 0.2)\",\n              borderBottom: \"none\",\n              boxShadow: \"none\",\n              \"& .MuiButtonBase-root.Mui-selected\": {\n                backgroundColor: 'rgba(171, 199, 255, 0.2)',\n              }\n            }}\n          >\n            {tabs.map((tab, i) => (\n              <Tab sx={{ border: \"1px solid rgba(255, 255, 255, 0.2)\", borderTop: \"none\" }} iconPosition=\"start\" label={<Typography variant=\"TitleMedium\">{tab.label}</Typography>} {...a11yProps(i)} key={\"tab-\" + i} />\n            ))}\n          </Tabs>\n        </div>\n      </Box>\n\n      <div\n        style={{\n          height: \"100%\",\n          marginLeft: \"20px\",\n          minHeight: \"424px\"\n        }}\n      >\n        {tabs.map((tab, i) => (\n          <TabPanel key={i} value={selectedIndex} index={i}>\n            {tab.component}\n          </TabPanel>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import { DefaultUser } from \"@/backend/functions\";\nimport { FilledButton } from \"@/styles/theme\";\nimport { Icon, InputAdornment, MenuItem, Table, TableBody, TableCell, TableContainer, TableRow, TextField, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { BiLockAlt, BiSearch } from \"react-icons/bi\";\nimport { MdOutlineCancel } from \"react-icons/md\";\nimport { SiGithub } from \"react-icons/si\";\n\nexport interface REPOS {\n    id: number;\n    name: string;\n    full_name: string;\n    html_url: string;\n    description: string;\n    owner: {\n        login: string;\n    };\n    updated_at: string;\n    private: boolean;\n}\n\nexport interface repo {\n    repositories: REPOS[];\n}\n\nconst GitArea = () => {\n    const [repos, setRepos] = useState<REPOS[]>();\n    console.log(repos, 'repos');\n    const usr = JSON.parse(window.localStorage.getItem('user') || \"{}\");\n\n    useEffect(() => {\n        async function foo() {\n            const accessToken = \"Token \" + usr.accessToken;\n            try {\n                let res = await fetch(\n                    process.env.NEXT_PUBLIC_API_URL + \"/api/getUserRepos\",\n                    {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json;charset=utf-8\",\n                            Authorization: accessToken,\n                        },\n                    }\n                );\n                if (res.ok) {\n                    const result = await res.json();\n                    const repositories = result.repos;\n                    setRepos(repositories);\n                }\n            } catch (error) {\n                // console.log(error);\n            }\n        }\n        foo();\n    },)\n\n    return (\n        <div style={{ marginTop: \"-40px\" }}>\n            <Typography paragraph sx={{ mb: 2 }} variant=\"LabelLarge\">Connect with a Git provider to import an existing project from a Git Repository.</Typography>\n            {!usr ? <Typography variant=\"LabelLarge\">Connect to Github</Typography> : <div style={{ margin: \"20px\", display: \"flex\", marginBottom: \"32px\", justifyContent: \"space-between\" }}>\n                <div style={{ display: \"flex\", alignItems: 'center' }}>\n                    <SiGithub />\n                    <Typography style={{ marginLeft: \"6px\" }} variant=\"LabelLarge\">Connect Github</Typography>\n                </div>\n                <div style={{ display: 'flex', alignItems: \"center\", cursor: 'pointer' }} onClick={() => { window.open(`https://github.com/login/oauth/authorize?client_id=e07b9a9e6d2763621b8e&scope=repo,user:email&state=${usr.accessToken}`) }}>\n                    <Typography style={{ marginRight: \"6px\" }} variant=\"LabelLarge\">{usr.username}</Typography>\n                    <MdOutlineCancel />\n                </div>\n            </div>}\n            {repos && repos.length > 0 &&\n                <GitHubRepos repositories={repos} user={usr} />\n            }\n        </div>\n    )\n}\n\nexport default GitArea;\n\ninterface githubrepo {\n    repositories: REPOS[];\n    user: DefaultUser | undefined;\n}\n\nconst GitHubRepos = ({ repositories, user }: githubrepo) => {\n\n    const arrUniq = repositories && [...new Map(repositories.map(v => [v.owner.login, v])).values()];\n\n    const owners = arrUniq.map(({ owner }) => (owner));\n\n    const ownersNames = owners.map(({ login }) => (login));\n    const [activeOwner, setOwner] = useState<string>(ownersNames[0]);\n    const [activeRepos, setActiveRepos] = useState(repositories);\n\n    const handleReposUpdate = (value: string) => {\n        const newRepos = repositories.filter(repo => repo.full_name.toLowerCase().includes(value.toLowerCase()))\n        setActiveRepos(newRepos);\n        console.log(activeRepos[1], \"newRepos\")\n        // console.log(new Date(activeRepos[0].updated_at).toLocaleDateString())\n    }\n\n\n    return (\n        <>\n            <div>\n                <Typography paragraph variant=\"TitleLarge\">Import Git Repositories</Typography>\n                <div style={{ display: \"flex\", justifyContent: \"space-between\", marginTop: \"32px\", marginBottom: \"16px\" }}>\n                    <TextField style={{ paddingBottom: \"0px\", width: \"100%\", maxWidth: \"200px\" }}\n                        select\n                        size=\"small\"\n                        defaultValue={activeOwner}\n                        label=\"Github Account\"\n                        inputProps={{\n                            style: {\n                                fontWeight: 400,\n                                fontSize: \"16px\",\n                                lineHeight: \"24px\",\n                            }\n                        }}\n                        InputLabelProps={{\n                            style: {\n                                fontWeight: 500,\n                                fontSize: \"14px\",\n                                lineHeight: \"20px\",\n                            }\n                        }}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <BiSearch />\n                                </InputAdornment>\n                            )\n                        }}\n                        onChange={(e) => { setOwner(e.target.value), handleReposUpdate(e.target.value) }}\n                        ref={null}\n                    >\n                        {ownersNames.map((owner) => {\n                            return (\n                                <MenuItem key={owner} value={owner}>{owner}</MenuItem>\n                            )\n                        })}\n                    </TextField>\n                    <TextField style={{ paddingBottom: \"0px\", width: \"100%\", maxWidth: \"200px\" }}\n                        size=\"small\"\n                        label=\"Search Repository\"\n                        inputProps={{\n                            style: {\n                                fontWeight: 400,\n                                fontSize: \"16px\",\n                                lineHeight: \"24px\",\n                            }\n                        }}\n                        InputLabelProps={{\n                            style: {\n                                fontWeight: 500,\n                                fontSize: \"14px\",\n                                lineHeight: \"20px\",\n                            }\n                        }}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <BiSearch />\n                                </InputAdornment>\n                            )\n                        }}\n                        onChange={(e) => { handleReposUpdate(e.target.value) }}\n                        ref={null}\n                    >\n                        {ownersNames.map((owner) => {\n                            return (\n                                <MenuItem key={owner} value={owner}>{owner}</MenuItem>\n                            )\n                        })}\n                    </TextField>\n                </div>\n                <ActiveRepos repositories={activeRepos} user={user} />\n            </div>\n        </>\n    )\n}\n\nconst ActiveRepos = ({ repositories, user }: githubrepo) => {\n\n    const TechStack = [\"react\", \"next\", \"nuxt\", \"angular\", \"vue\", \"swelet\"];\n\n    return (\n        <>\n            <TableContainer sx={{ overflowY: 'auto', bottom: 0, maxHeight: \"230px\", width: \"100%\", height: \"100%\", \"& .MuiTableCell-root\": { p: \"6px 12px\" }, borderRadius: \"0px !important\", }} >\n                <Table aria-label=\"simple table\">\n                    <TableBody>\n                        {repositories.map((repo) => {\n                            const gitrepourl = repo.full_name.replace(\"/\", \"|\");\n                            let playground = 'react';\n                            return (\n                                <TableRow key={repo.id}\n                                    sx={{ '&:first-of-type td': { borderBottom: \"1px solid rgba(81, 81, 81, 1)\" }, \"& .MuiTableCell-root\": { padding: \"8px\" } }}\n                                >\n                                    <TableCell\n                                        // sx={{ flexDirection: {md: \"column\", xs: \"column\" }}}\n                                        style={{ display: \"flex\", justifyContent: \"space-between\" }}\n                                    >\n                                        <div style={{ maxWidth: \"220px\" }}>\n                                            <Typography variant=\"TitleSmall\">{repo.name}\n                                            </Typography>\n                                            {repo.private && <Icon><BiLockAlt fontSize=\"16px\" /></Icon>}\n                                            <Typography variant=\"BodySmall\" paragraph style={{ margin: '0px' }}>{Math.round((new Date().getTime() - new Date(repo.updated_at).getTime()) / (1000 * 60 * 60 * 24))}d ago</Typography>\n                                        </div>\n                                        <div style={{ float: 'right' }}>\n                                            <TextField\n                                                select\n                                                variant=\"standard\"\n                                                sx={{ width: \"100px\", marginRight: \"20px\" }}\n                                                size=\"small\"\n                                                value={playground}\n                                                inputProps={{\n                                                    style: {\n                                                        fontWeight: 400,\n                                                        fontSize: \"16px\",\n                                                        lineHeight: \"24px\",\n                                                    }\n                                                }}\n                                                InputLabelProps={{\n                                                    style: {\n                                                        fontWeight: 500,\n                                                        fontSize: \"14px\",\n                                                        lineHeight: \"20px\",\n                                                    }\n                                                }}\n                                                onChange={(e) => { playground = e.target.value }}\n                                                ref={null}\n                                            >\n                                                {TechStack.map((tech) => {\n                                                    return (\n                                                        <MenuItem key={tech} value={tech}>{tech}</MenuItem>\n                                                    )\n                                                })}\n                                            </TextField>\n                                            <FilledButton onClick={() => { window.open(`https://cometlabs.in/lab/${playground}/${user!.username}/g/${gitrepourl}?git_url=${gitrepourl}&provider=github`) }}>\n                                                <Typography variant=\"LabelLarge\">Import</Typography>\n                                            </FilledButton>\n                                        </div>\n                                        {/* <Typography style={{ marginRight: \"16px\" }} paragraph></Typography> */}\n                                    </TableCell>\n                                </TableRow>\n                            )\n                        })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    )\n}","// import { DefaultUser } from \"@/backend/functions\";\n// import { InternalLinks } from \"@/content/Links\";\nimport ShortDashboard, { DashboardProps } from \"@/layout/ShortDashboard\";\nimport { CardContainer, FilledButton } from \"@/styles/theme\";\nimport { Chip, Grid, IconButton, InputAdornment, Modal, TextField, Typography } from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport { BsArrowRightShort } from \"react-icons/bs\";\nimport { BiSearch } from \"react-icons/bi\"\nimport { MdDelete, MdOutlineCancel } from 'react-icons/md';\nimport { FestecTracks, TrackCard } from '@/components/MainArea/PlaygroundArea';\nimport GitArea from \"@/components/MainArea/GitArea\";\nimport { DefaultUser } from \"@/backend/functions\";\nimport { useRouter } from \"next/router\";\nimport * as React from 'react';\n\nconst FirstHackButton = () => {\n    const [open, setOpen] = useState(false);\n\n    const [user, setUser] = useState<DefaultUser>();\n\n    useEffect(() => {\n        async function foo() {\n            const usr = JSON.parse(window.localStorage.getItem('user')!);\n            if (usr) {\n                setUser(usr);\n            }\n        }\n        foo();\n    }, [])\n\n    // const link = user ? InternalLinks.LANDING_PAGE + \"lab/react/\" + user.username + \"/f/ayr54dj\" : InternalLinks.SIGNIN_PAGE;\n\n    return (\n        <>\n            <FilledButton onClick={() => { setOpen(true) }} sx={{ width: \"max-content\", m: \"auto\", mb: 5 }} startIcon={<BsArrowRightShort />}>\n                <Typography variant=\"LabelLarge\">\n                    Deploy your First Project\n                </Typography>\n            </FilledButton>\n            <HackModal open={open} setOpen={setOpen} user={user!} />\n        </>\n    )\n}\n\nexport default FirstHackButton;\n\ninterface MOdalProps {\n    open: boolean;\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n    user: DefaultUser;\n}\n\nconst HackModal = ({ open, setOpen, user }: MOdalProps) => {\n\n    const tabs: DashboardProps[\"tabs\"] = [\n        { label: 'Start from a Template', component: <Template user={user!} /> },\n        { label: 'Import from Github', component: <GitArea /> },\n        { label: \"Your Projects\", component: <YourProjects /> },\n        { label: \"Cometlabs Designed\", component: <CometlabsDesigned /> },\n        { label: \"Top from Community\", component: <TopFromCommunity /> },\n        { label: \"Your Starred\", component: <YourStarred /> },\n    ];\n\n    return (\n        <Modal open={open} onClose={() => setOpen(false)}>\n            <Grid container>\n                <Grid item sx={{ borderRadius: \"4px\", position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\", justifyContent: \"space-between\", alignContent: \"center\", width: { xs: \"80%\", sm: \"70%\", md: \"50%\" } }}>\n                    <CardContainer elevation={0} sx={{ height: \"50%\", p: 3, maxWidth: \"200x\", backgroundColor: \"black\" }}>\n                        <Typography paragraph sx={{ mb: 5 }} variant=\"TitleLarge\">Create a Project</Typography>\n                        <ShortDashboard tabs={tabs} />\n                    </CardContainer>\n                </Grid>\n            </Grid>\n        </Modal>\n    )\n}\n\ninterface TemplateProps {\n    user: DefaultUser\n}\n\nconst Template = ({ user }: TemplateProps) => {\n    const [value, setValue] = useState('');\n    // const [selected, setSelected] = useState(-1);\n    console.log(value)\n    return (\n        <div>\n            {/* {selected == -1 ? <> */}\n            <div style={{ position: 'absolute', top: 10, right: 24, width: '50%' }}>\n                <TextField\n                    margin=\"normal\"\n                    value={value}\n                    fullWidth\n                    inputProps={{\n                        style: {\n                            fontWeight: 400,\n                            fontSize: \"16px\",\n                            lineHeight: \"24px\",\n                        },\n                    }}\n                    InputLabelProps={{\n                        style: {\n                            fontWeight: 500,\n                            fontSize: \"14px\",\n                            lineHeight: \"20px\",\n                        }\n                    }}\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment position=\"start\">\n                                <BiSearch />\n                            </InputAdornment>\n                        ),\n                        endAdornment: (\n                            <InputAdornment position=\"start\">\n                                {/* <IconButton size=\"small\"> */}\n                                <MdOutlineCancel style={{ cursor: \"pointer\" }} onClick={() => { setValue(\"\") }} />\n                                {/* </IconButton> */}\n                            </InputAdornment>\n                        ),\n                    }}\n                    label=\"Search Template\"\n                    autoFocus\n                    size=\"small\"\n                    ref={null}\n                    onChange={e => { setValue(e.target.value) }}\n                />\n            </div>\n            <Typography paragraph sx={{ mb: 2 }} variant=\"TitleLarge\">Start from the Template</Typography>\n            {/* <PlayArea value={value} /> */}\n            <Grid container sx={{ maxHeight: \"388px\", overflowY: \"auto\", justifyContent: \"center\", textAlign: \"center\" }} spacing={1}>\n                {FestecTracks.map(\n                    (festectracks, i) => (festectracks.title.includes(value!) &&\n                        <Grid item key={\"pg-\" + i}>\n                            <TrackCard\n                                // index={i}\n                                // labs={labs}\n                                user={user}\n                                {...festectracks}\n                            // sx={{ height: \"200px\", width: \"160px\" }}\n                            />\n                        </Grid>)\n                )}\n            </Grid>\n            {/* </> :\n                <>hello</>\n            } */}\n        </div>\n    )\n}\n\n\nconst CometlabsDesigned = () => {\n    return (\n        <div>\n            <Typography paragraph variant=\"TitleLarge\">Cometlabs Designed</Typography>\n            <Typography variant=\"BodyLarge\">coming soon...</Typography>\n        </div>\n    )\n}\n\nconst TopFromCommunity = () => {\n    return (\n        <div>\n            <Typography paragraph variant=\"TitleLarge\">Top From Community</Typography>\n            <Typography variant=\"BodyLarge\">coming soon...</Typography>\n        </div>\n    )\n}\n\nconst YourProjects = () => {\n    // submission\n    // freelabs\n    const [submission, setSubmission] = useState<ALLSUBMISSIONS[]>();\n    const [freelabs, setFreelabs] = useState<LABS[]>();\n    const usr = JSON.parse(window.localStorage.getItem('user') || \"{}\");\n\n    useEffect(() => {\n        async function foo() {\n            const accessToken = \"Token \" + usr.accessToken;\n            try {\n                let sub = await fetch(\n                    process.env.NEXT_PUBLIC_API_URL + \"/labs/getPlaygroundSubmissions\",\n                    {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json;charset=utf-8\",\n                            Authorization: accessToken,\n                        },\n                        body: JSON.stringify({ user_id: usr.id }),\n                    }\n                );\n                if (sub.ok) {\n                    const result = await sub.json();\n                    setSubmission(result);\n                }\n\n                let free = await fetch(\n                    process.env.NEXT_PUBLIC_API_URL + \"/labs/getSavedUserCode\",\n                    {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json;charset=utf-8\",\n                            Authorization: accessToken\n                        },\n                        body: JSON.stringify({ user_id: usr.id })\n                    }\n                );\n                if (free.ok) {\n                    const result = await free.json();\n                    setFreelabs(result);\n                }\n            } catch (error) { }\n        }\n        foo();\n    },)\n\n    const router = useRouter();\n\n    return (\n        <div style={{ maxHeight: \"420px\", overflowY: \"auto\", marginTop: \"-32px\" }}>\n            {submission && submission.length > 0 &&\n                <div style={{ marginBottom: \"16px\", paddingTop: \"0px\" }}>\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <Typography variant=\"TitleLarge\" color=\"primary\">All Projects</Typography>\n                        <Chip sx={{ backgroundColor: \"surfacevariant.main\", color: 'primary.main', fontWeight: \"bold\", ml: 2 }} label={`Total Labs - ${submission.length}`} />\n                    </div>\n                    <Grid container>\n                        {submission.map((submi) => {\n                            return (\n                                <Grid item key={submi.sub_id} xs={6}>\n                                    <CardContainer sx={{ p: 1.5, my: 2, border: \"none\", ':hover': { backgroundColor: \"surfacevariant.main\" } }}>\n                                        {/* <Grid item xs={12} sx={{ mb: \"10px\", height: \"133dpx\", display: \"flex\", justifyContent: \"center\" }}>\n                                            <div style={{ height: \"133px\" }}>\n                                                <Image\n                                                    src={submi.screenshot ? `data:image/png;base64,${submi.screenshot}` : dummy(submi.framework)}\n                                                    width={312}\n                                                    height={133}\n                                                    alt={\"User bg\"}\n                                                />\n                                            </div>\n                                        </Grid> */}\n                                        <Typography paragraph variant=\"HeadlineMedium\">{submi.framework}</Typography>\n                                        <Typography variant=\"BodyLarge\">{submi.type == \"f\" ? \"Project\" : \"Product\"}</Typography>\n                                        <Typography paragraph variant=\"LabelLarge\" sx={{ color: \"onsurfacevariant.main\" }}>{new Date(submi.Submission_Time).toLocaleDateString()}</Typography>\n                                    </CardContainer>\n                                </Grid>\n                            )\n                        })}\n                    </Grid>\n                </div>}\n            {freelabs && freelabs.length > 0 &&\n                <div style={{ marginBottom: \"32px\" }}>\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <Typography variant=\"TitleLarge\" color=\"primary\">Practice Playgrounds</Typography>\n                        <Chip sx={{ backgroundColor: \"surfacevariant.main\", color: 'primary.main', fontWeight: \"bold\", ml: 2 }} label={`Total Labs - ${freelabs.length}`} />\n                    </div>\n                    <Grid container spacing={2} sx={{ mt: 3, justifyContent: \"space-around\" }}>\n                        {freelabs.map((lab) => {\n                            const link = \"https://cometlabs.in/lab/\" + lab.framework + \"/\" + usr.username + \"/\" + lab.type + \"/\" + lab.question_id;\n                            return (\n                                <Grid item key={lab.question_id} xs={6}>\n                                    <CardContainer sx={{ cursor: 'pointer', border: \"none\", \":hover\": { backgroundColor: \"surfacevariant.main\" } }} onClick={() => { window.open(link) }}>\n                                        <div style={{ padding: \"16px\" }}>\n                                            <div style={{ display: 'flex', justifyContent: \"space-between\", marginBottom: \"8px\" }}>\n                                                {lab.question && <Typography paragraph sx={{ mt: 1, maxHeight: \"20px\", overflow: \"hidden\" }} variant=\"TitleMedium\">{lab.question}</Typography>}\n                                                <Chip label={`${lab.framework}-lab`} sx={{ my: \"auto\", color: \"onsurfacevariant.main\" }} />\n                                            </div>\n                                            <div style={{ display: 'flex', justifyContent: \"space-between\" }}>\n                                                <div>\n                                                    <Typography paragraph sx={{ m: 0, color: 'onsurfacevariant.main', maxHeight: \"24px\", overflow: \"hidden\" }} variant=\"LabelLarge\">Last Modified</Typography>\n                                                    <Typography paragraph sx={{ m: 0, color: 'onsurfacevariant.main', maxHeight: \"24px\", overflow: \"hidden\" }} variant=\"LabelLarge\">{new Date(lab.modifiedAt).toDateString()}</Typography>\n                                                </div>\n                                                <IconButton\n                                                    color=\"error\"\n                                                    sx={{ p: 0, my: \"auto\" }}\n                                                    onClick={async (e) => {\n                                                        e.stopPropagation();\n                                                        const accessToken = \"Token \" + usr.accessToken;\n                                                        let options = {\n                                                            method: \"POST\",\n                                                            headers: {\n                                                                \"Content-Type\": \"application/json;charset=utf-8\",\n                                                                authorization: accessToken\n                                                            },\n                                                            body: JSON.stringify({ question_id: lab.question_id, user_id: lab.user_id }),\n                                                        };\n\n                                                        try {\n                                                            let res = await fetch(\n                                                                process.env.NEXT_PUBLIC_API_URL + \"/labs/deleteSavedUserCode\",\n                                                                options\n                                                            );\n                                                            if (res.ok) {\n                                                                router.reload();\n                                                            } else {\n                                                                console.log(\"error\")\n                                                            }\n                                                        } catch (error) {\n                                                            console.log(error);\n                                                        }\n                                                        e.stopPropagation();\n                                                    }}\n                                                >\n                                                    <MdDelete />\n                                                </IconButton>\n                                            </div>\n                                        </div>\n\n                                    </CardContainer >\n                                </Grid>\n                            )\n                        })}\n                    </Grid>\n                </div>}\n        </div>\n    )\n}\n\nexport interface LABS {\n    files: {},\n    modifiedAt: Date;\n    question_id: string;\n    type: string;\n    user_id: string;\n    name: string;\n    framework: string;\n    public: boolean;\n    question?: string;\n}\n\nexport interface ALLSUBMISSIONS {\n    sub_id: string;\n    question_id: string;\n    user_id: string;\n    type: 'f' | 'h' | 'l';\n    files: Record<string, string>;\n    output: {\n        stderr: string;\n        stdout: string;\n    };\n    screenshot: string;\n    Status: string;\n    Testcase_Passed: number;\n    Testcase_Total: number;\n    Submission_Time: Date;\n    framework: string;\n}\n\n\nconst YourStarred = () => {\n    return (\n        <div>\n            <Typography paragraph variant=\"TitleLarge\">Your Starred</Typography>\n            <Typography variant=\"BodyLarge\">coming soon...</Typography>\n        </div>\n    )\n}","// this component will return playground cards, ready to use anywhere.\nimport { Grid, IconButton, Modal, TextField, Typography } from \"@mui/material\";\nimport { DefaultUser } from \"@/backend/functions\";\nimport * as React from \"react\";\n// import ShowcaseSmall from \"@/components/Carousels/ShowcaseSmall\";\nimport Image from \"next/image\";\nimport { CardContainer, TextButton } from \"@/styles/theme\";\nimport { useRouter } from \"next/router\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { useState } from \"react\";\nimport { MdOutlineCancel } from 'react-icons/md';\nimport dynamic from \"next/dynamic\";\n\nconst ModalPlayground = dynamic(() => import('@/components/MainArea/Modals'),\n  { ssr: false }\n);\n\n\ninterface play {\n  plus?: boolean;\n  value?: string;\n}\n\n\nconst PlayArea = ({ plus, value }: play) => {\n  const [user, setUser] = React.useState<DefaultUser>();\n\n\n  React.useEffect(() => {\n    async function foo() {\n      const usr = JSON.parse(window.localStorage.getItem('user') || \"{}\");\n      if (usr) {\n        setUser(usr);\n      }\n    }\n    foo();\n  }, [])\n\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <>\n      <Grid direction=\"row\" container spacing={2} justifyContent=\"center\">\n        {FestecTracks.map(\n          (festectracks, i) => (festectracks.title.includes(value!) && i < 5 &&\n            <Grid item key={\"pg-\" + i}>\n              <TrackCard\n                // index={i}\n                // labs={labs}\n                user={user}\n                {...festectracks}\n              // sx={{ height: \"200px\", width: \"160px\" }}\n              />\n            </Grid>)\n        )}\n        {plus && <Grid item>\n          <CardContainer sx={{ textAlign: \"center\", p: 2, height: \"80px\", width: \"66px\", border: 0, cursor: \"pointer\" }}\n            onClick={() => { setOpen(true) }} elevation={1}>\n            <Image\n              src=\"/plus.png\"\n              height={34}\n              width={34}\n              alt={\"add-logo\"}\n            />\n            {/* <Typography sx={{ fontWeight: 500, mt: 1 }}>{props.title}</Typography> */}\n          </CardContainer>\n        </Grid>}\n      </Grid>\n      <ModalPlayground open={open} setOpen={setOpen} user={user} />\n      {/* <Modal open={open} onClose={() => setOpen(false)}>\n        <Grid container>\n          <Grid item sx={{ borderRadius: \"4px\", textAlign: \"center\", position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\", justifyContent: \"space-between\", alignContent: \"center\", width: { xs: \"80%\", sm: \"70%\", md: \"50%\" } }}>\n            <CardContainer elevation={0} sx={{ p: 3, pb: { md: 7, xs: 4 }, maxWidth: \"200x\" }}>\n              <Typography paragraph sx={{ mb: 5 }} variant=\"TitleLarge\">Explore COMETLABS</Typography>\n              <Grid direction=\"row\" container spacing={2} justifyContent=\"center\" alignItems=\"center\">\n                {FestecTracks.map(\n                  (festectracks, i) =>\n                    <Grid item key={\"pg-\" + i}>\n                      <TrackCard\n                        // index={i}\n                        user={user}\n                        {...festectracks}\n                      />\n                    </Grid>\n                )}\n              </Grid>\n            </CardContainer>\n          </Grid>\n        </Grid>\n      </Modal> */}\n    </>\n  );\n}\n\n\nexport default PlayArea;\n\ninterface TrackCardProps extends Track {\n  selected?: boolean;\n  sx?: any;\n  user?: DefaultUser | undefined;\n  // index: number,\n  // labs?: Array<LABS>;\n}\n\nexport function TrackCard({ selected, sx, user, ...props }: TrackCardProps) {\n  const router = useRouter();\n  const [open, setOpen] = useState(false);\n  const [name, setName] = useState('MyLab');\n\n  const handleClick = (name: string) => {\n    if (user) {\n      // localStorage.setItem(\"free\", JSON.stringify(`${props.title}-lab`));\n      localStorage.setItem(\"free\", JSON.stringify(name));\n      const link = \"/lab/\" + props.title + \"/\" + user.username + \"/f/\" + uuidv4();\n      if (!user.username) {\n        router.push('/signin')\n      } else {\n        router.push(link)\n      }\n    }\n    else {\n      router.push('/signin')\n    }\n  }\n\n  const handleClose = (_event: string, reason: string) => {\n    if (reason && reason == \"backdropClick\")\n      return;\n    setOpen(false)\n  }\n\n  function capitalizeFirstLetter(string: string) {\n    const str = string.replace(\"-t\", \"-T\");\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  function capitalizeLetter(string: string) {\n    const str = string.replace(\"-t\", \" T\");\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return (\n    <>\n      <CardContainer sx={{ \"&:hover\": { backgroundColor: \"surfacevariant.main\" }, height: \"100px\", width: \"100px\", p: 1, py: 2, display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\", backgroundColor: \"transparent\", backgroundImage: \"none\" }} onClick={() => { setOpen(true) }} elevation={1}>\n        <div style={{ width: \"40px\", height: \"40x\", margin: \"auto\", marginTop: \"0px\" }}>\n          <Image\n            src={`/new/${capitalizeFirstLetter(props.title)}.png`}\n            height={40}\n            width={40}\n            // layout=\"fill\"\n            alt={props.title + \"-logo\"}\n          />\n        </div>\n        <Typography variant=\"BodySmall\">{capitalizeLetter(props.title)}</Typography>\n      </CardContainer>\n      <Modal open={open} onClose={handleClose}>\n        <Grid container>\n          <Grid item sx={{ borderRadius: \"4px\", textAlign: \"center\", position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\", justifyContent: \"space-between\", alignContent: \"center\", width: { xs: \"80%\", sm: \"70%\", md: \"50%\" } }}>\n            <IconButton sx={{ position: \"absolute\", right: \"16px\", top: \"16px\" }} onClick={() => { setOpen(false) }}><MdOutlineCancel /></IconButton>\n            <CardContainer elevation={0} sx={{ p: 3, pb: { md: 7, xs: 4 }, maxWidth: \"200x\", backgroundColor: \"black\" }}>\n              <Typography paragraph sx={{ mb: 5 }} variant=\"TitleLarge\">Create {props.title[0].toUpperCase() + props.title.slice(1)}-LAB</Typography>\n              <TextField\n                margin=\"normal\"\n                required\n                defaultValue=\"MyLab\"\n                label=\"Enter Lab Name\"\n                type=\"text\"\n                inputProps={{\n                  style: {\n                    fontWeight: 400,\n                    fontSize: \"16px\",\n                    lineHeight: \"24px\",\n                  }\n                }}\n                InputLabelProps={{\n                  style: {\n                    fontWeight: 500,\n                    fontSize: \"14px\",\n                    lineHeight: \"20px\",\n                  }\n                }}\n                onChange={(e) => setName(e.target.value)}\n                InputProps={{\n                  endAdornment: (\n                    <TextButton\n                      color=\"primary\"\n                      onClick={() => { handleClick(name) }}\n                    >\n                      <Typography variant=\"LabelMedium\">Open</Typography>\n                    </TextButton>\n                  ),\n                }}\n                ref={null}\n              />\n            </CardContainer>\n          </Grid>\n        </Grid>\n      </Modal>\n    </>\n  )\n}\n\nexport interface Track {\n  title: string;\n  // imageUrl: string;\n}\n\nexport const FestecTracks: Array<Track> = [\n  {\n    // imageUrl: \"\",\n    title: \"react\"\n  },\n  {\n    // imageUrl: \"\",\n    title: \"angular\",\n  },\n  {\n    // imageUrl: \"\",\n    title: \"vue\",\n  },\n  {\n    // imageUrl: \"\",\n    title: \"next\",\n  },\n  {\n    // imageUrl: \"\",\n    title: \"nuxt\",\n  },\n  {\n    // imageUrl: \"\",\n    title: \"react-Typescript\"\n  },\n  {\n    // imageUrl: \"\",\n    title: \"next-Typescript\",\n  },\n  {\n    // imageUrl: \"\",\n    title: \"quasar\",\n  },\n  {\n    // imageUrl: \"\",\n    title: \"quasar-Typescript\",\n  },\n  {\n    // imageUrl: \"\",\n    title: \"remix\",\n  },\n  {\n    // imageUrl: \"\",\n    title: \"remix-Typescript\",\n  },\n  {\n    // imageUrl: \"\",\n    title: \"solid\",\n  },\n  {\n    // imageUrl: \"\",\n    title: \"solid-Typescript\",\n  },\n  {\n    // imageUrl: \"\",\n    title: \"svelte\",\n  },\n  {\n    // imageUrl: \"\",\n    title: \"vite-Lit\",\n  },\n  {\n    // imageUrl: \"/vite-lit-typescript.png\",\n    title: \"vite-Lit-Typescript\",\n  },\n  {\n    // imageUrl: \"/vite-preact.svg\",\n    title: \"vite-Preact\",\n  },\n  {\n    // imageUrl: \"/vite-preact-typescript.svg\",\n    title: \"vite-Preact-Typescript\",\n  },\n  {\n    // imageUrl: \"/vite-react.svg\",\n    title: \"vite-React\",\n  },\n  {\n    // imageUrl: \"/vite-react-typescript.svg\",\n    title: \"vite-React-Typescript\",\n  },\n  {\n    // imageUrl: \"\",\n    title: \"vite-Svelte\",\n  },\n  {\n    // imageUrl: \"\",\n    title: \"vite-Svelte-Typescript\",\n  },\n  {\n    // imageUrl: \"\",\n    title: \"vite-Vanilla\",\n  },\n  {\n    // imageUrl: \"\",\n    title: \"vite-Vanilla-Typescript\",\n  },\n  {\n    // imageUrl: \"\",\n    title: \"vue-Typescript\",\n  },\n  {\n    // imageUrl: \"\",\n    title: \"express\"\n  },\n  {\n    // imageUrl: \"\",\n    title: \"feathers\"\n  },\n  {\n    // imageUrl: \"\",\n    title: \"nest\"\n  },\n  {\n    // imageUrl: \"\",\n    title: \"java\"\n  },\n  {\n    // imageUrl: \"\",\n    title: \"c\"\n  },\n  {\n    // imageUrl: \"\",\n    title: \"cpp\"\n  },\n  {\n    // imageUrl: \"\",\n    title: \"swift\"\n  },\n  {\n    // imageUrl: \"\",\n    title: \"python\"\n  },\n];"],"names":["TabPanel","props","children","value","index","other","jsx_runtime","jsx","div","role","hidden","id","concat","aria-labelledby","Fragment","ShortDashboard","tabs","selectedIndex","setSelectedIndex","React","handleChange","_event","newValue","jsxs","style","display","width","Box","sx","sm","flexShrink","flexDirection","height","maxHeight","maxWidth","Tabs","orientation","variant","onChange","TabIndicatorProps","color","borderTop","borderBottom","boxShadow","backgroundColor","map","tab","i","react","createElement","Tab","border","iconPosition","label","Typography","key","marginLeft","minHeight","component","GitArea","repos","setRepos","useState","console","log","usr","JSON","parse","window","localStorage","getItem","useEffect","foo","accessToken","res","fetch","process","method","headers","Authorization","ok","result","json","repositories","error","marginTop","paragraph","mb","margin","marginBottom","justifyContent","alignItems","SiGithub","cursor","onClick","open","marginRight","username","MdOutlineCancel","length","GitHubRepos","user","param","arrUniq","Map","v","owner","login","values","owners","ownersNames","activeOwner","setOwner","activeRepos","setActiveRepos","handleReposUpdate","newRepos","filter","repo","full_name","toLowerCase","includes","TextField","paddingBottom","select","size","defaultValue","inputProps","fontWeight","fontSize","lineHeight","InputLabelProps","InputProps","startAdornment","InputAdornment","position","BiSearch","e","target","ref","MenuItem","ActiveRepos","TechStack","TableContainer","overflowY","bottom","p","borderRadius","Table","aria-label","TableBody","gitrepourl","replace","playground","TableRow","padding","TableCell","name","private","Icon","BiLockAlt","Math","round","Date","getTime","updated_at","float","tech","FilledButton","FirstHackButton","setOpen","setUser","m","startIcon","BsArrowRightShort","HackModal","BuildFirstHackArea","Template","YourProjects","CometlabsDesigned","TopFromCommunity","YourStarred","Modal","onClose","Grid","container","item","top","left","transform","alignContent","xs","md","CardContainer","elevation","setValue","right","fullWidth","endAdornment","autoFocus","textAlign","spacing","FestecTracks","festectracks","title","TrackCard","submission","setSubmission","freelabs","setFreelabs","sub","body","stringify","user_id","free","router","useRouter","paddingTop","Chip","ml","my","submi","framework","type","Submission_Time","toLocaleDateString","sub_id","mt","link","lab","question_id","question","overflow","modifiedAt","toDateString","IconButton","stopPropagation","options","authorization","reload","MdDelete","ModalPlayground","dynamic","__webpack_require__","then","bind","ssr","PlayArea","plus","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","direction","Image","src","alt","selected","setName","handleClick","setItem","uuidv4","push","handleClose","reason","py","backgroundImage","capitalizeFirstLetter","string","str","charAt","toUpperCase","slice","capitalizeLetter","pb","required","TextButton","__webpack_exports__"],"sourceRoot":""}