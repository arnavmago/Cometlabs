{"version":3,"file":"static/chunks/7817.73f7f3f5bf48f9a8.js","mappings":"4QA+Be,SAASA,EAASC,CAAwC,CAAE,IAA1C,CAAEC,aAAAA,CAAAA,CAAc,GAAGC,EAAqB,CAAxCF,EACzB,CAAEE,KAAMC,CAAAA,CAAS,CAAGC,CAAAA,EAAAA,EAAAA,UAAAA,IAGpB,CAAEC,gBAAAA,CAAAA,CAAiB,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,IACtB,CAAEC,MAAAA,CAAAA,CAAO,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,IACZC,EAAwBF,EAAM,WAC9BG,EAAW,IAAIC,KAAKF,EAAQG,UAAU,EAAEC,OAAO,GAAK,IAAIF,OAAOE,OAAO,GAGtEC,EAAiB,SAAY,CAEjC,GADAC,QAAQC,GAAG,CAACd,EAAKe,MAAM,EACjBd,EAAS,CACb,IAAMe,EAAoBf,MAAAA,EAAAA,KAAAA,EAAAA,EAASe,IAAI,CACjCC,EAAc,SAAWD,EAAKC,WAAW,CACzCC,EAAQ,MAAMC,MAClBC,qDACA,CACEC,OAAQ,OACRC,QAAS,CACP,eAAgB,iCAChBC,cAAeN,CACjB,EACAO,KAAMC,KAAKC,SAAS,CAAC,CACnBC,QAAS3B,EAAKe,MAAM,CAAEa,cAAe,EACvC,EACF,GAEF,GAAIV,EAAMW,EAAE,CAAE,CACZ,GAAM,CAAEC,QAAAA,CAAAA,CAAS,CAAG,MAAMZ,EAAMa,IAAI,GAGpC,OAFA5B,EAAgB2B,EAAS,CAAEE,QAAS,SAAU,GAC9CC,IAAAA,IAAW,CAAC,GAAyEjC,MAAAA,CAAtEkC,EAAAA,EAAAA,CAAAA,YAA0B,CAAG,YAAsBC,MAAA,CAAVnC,EAAKoC,IAAI,CAAC,oBAA+BD,MAAA,CAAZnC,EAAKe,MAAM,GACzF,CAAEe,QAAAA,CAAQ,CACnB,CAAC,CACF,EAGGO,EAAiB,IAAM,CACrBpC,EACJgC,IAAAA,IAAW,CAAC,GAAyEjC,MAAAA,CAAtEkC,EAAAA,EAAAA,CAAAA,YAA0B,CAAG,YAAsBC,MAAA,CAAVnC,EAAKoC,IAAI,CAAC,oBAA+BD,MAAA,CAAZnC,EAAKe,MAAM,GAEhGkB,IAAAA,IAAW,CAACC,EAAAA,EAAAA,CAAAA,WAAyB,CAEzC,EAIA,MACE,GAAAI,EAAAC,IAAA,EAACC,MAAAA,WACEzC,GAAgBA,EAAc+B,OAAO,EACpC,GAAAQ,EAAAG,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAACC,UAAS,GAACC,GAAI,CAAEC,GAAI,CAAE,EAAGb,QAAQ,uBAAc,6BAI7D,GAAAM,EAAAG,GAAA,EAACK,EAAAA,CAAGA,CAAAA,CAACF,GAAI,CAAEG,UAAW,QAAS,WAC7B,GAAAT,EAAAG,GAAA,EAACO,EAAAA,EAAYA,CAAAA,CACXC,QAASlD,GAAgBA,EAAc+B,OAAO,CAAGO,EAAiBzB,CAAc,CAChFJ,SAAUA,GAAY,CAACT,EAAc+B,OAAO,UAI5C,GAAAQ,EAAAG,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAACV,QAAQ,aAAaY,GAAI,CAAEM,WAAY,GAAI,WACpDnD,GAAgBA,EAAc+B,OAAO,CAAG,wBAA0B,qBAAqB,SAoGpG","sources":["webpack://_N_E/./src/components/event/Register.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import * as React from \"react\";\n// import {\n//   Controller,\n// } from \"react-hook-form\";\nimport {\n  Box,\n  Typography\n} from \"@mui/material\";\n// import { ReadOnly } from \"./types\";\n// import { FestData } from \"@/components/Fest/Form\";\nimport { useSession } from \"next-auth/react\";\nimport { DefaultUser } from \"@/backend/functions\";\nimport { useSnackbar } from \"notistack\";\n// import { useForm } from \"react-hook-form\";\n// import { FaWhatsapp, FaDiscord } from \"react-icons/fa\";\nimport { CodeArena } from \"./types\";\nimport { useFormContext } from \"react-hook-form\";\nimport { arenaDetails } from './types';\nimport Router from \"next/router\";\nimport { InternalLinks } from \"@/content/Links\";\nimport { FilledButton } from \"@/styles/theme\";\n// import { HiArrowNarrowRight } from \"react-icons/hi\";\n\ninterface RegisterProps extends CodeArena {\n  isregistered?: isregistered;\n}\n\ninterface isregistered {\n  success?: string;\n}\n\nexport default function Referral({ isregistered, ...data }: RegisterProps) {\n  const { data: session } = useSession();\n  // const { control } = useForm();\n  // const [referral, setReferral] = React.useState(\"\");\n  const { enqueueSnackbar } = useSnackbar();\n  const { watch } = useFormContext();\n  const details: arenaDetails = watch(\"details\");\n  const disabled = new Date(details.regEndDate).getTime() < new Date().getTime()\n\n\n  const handleRegister = async () => {\n    console.log(data.festId);\n    if (!!session) {\n      const user: DefaultUser = session?.user as DefaultUser;\n      const accessToken = \"Token \" + user.accessToken\n      const check = await fetch(\n        process.env.NEXT_PUBLIC_API_URL + \"/organize/register\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json;charset=utf-8\",\n            Authorization: accessToken,\n          },\n          body: JSON.stringify({\n            eventId: data.festId, referral_code: \"\"\n          }),\n        }\n      )\n      if (check.ok) {\n        const { success } = await check.json();\n        enqueueSnackbar(success, { variant: \"success\" })\n        Router.push(`${InternalLinks.LANDING_PAGE + `/Explore/${data.type}/Dashboard/Dev/`}${data.festId}`);\n        return { success }\n      }\n    }\n  }\n\n  const handleContinue = () => {\n    if (!!session) {\n      Router.push(`${InternalLinks.LANDING_PAGE + `/Explore/${data.type}/Dashboard/Dev/`}${data.festId}`);\n    } else {\n      Router.push(InternalLinks.SIGNIN_PAGE);\n    }\n  }\n\n  // const [open, setOpen] = React.useState(false);\n\n  return (\n    <div>\n      {isregistered && isregistered!.success &&\n        <Typography paragraph sx={{ mb: 1 }} variant=\"TitleMedium\">\n          Get Yourself Registerred\n        </Typography>\n      }\n      <Box sx={{ textAlign: \"center\" }}>\n        <FilledButton\n          onClick={isregistered && isregistered!.success ? handleContinue : handleRegister}\n          disabled={disabled && !isregistered!.success}\n        // color=\"onprimary\"\n        // sx={{ mt: 4 }}\n        >\n          <Typography variant=\"LabelLarge\" sx={{ fontWeight: 500 }}>\n            {isregistered && isregistered!.success ? \"Continue to Dashboard\" : \"Register & Continue\"}\n          </Typography>\n        </FilledButton>\n      </Box>\n      {/* <Divider sx={{ my: 3, mx: \"20%\" }} /> */}\n      {/* <Box>\n        <Typography sx={{ mt: 5 }} variant=\"TitleMedium\" component=\"p\">Got a referral code?</Typography>\n        <Box>\n          <Controller\n            name=\"Referral\"\n            control={control}\n            render={({ field, fieldState: { error } }) => (\n              <TextField\n                margin=\"normal\"\n                id=\"Referral\"\n                autoComplete=\"Referral\"\n                autoFocus\n                disabled={!!isregistered && !!isregistered.success}\n                required\n                inputProps={{\n                  style: {\n                    fontWeight: 400,\n                    fontSize: \"16px\",\n                    lineHeight: \"24px\",\n                  }\n                }}\n                InputLabelProps={{\n                  style: {\n                    fontWeight: 500,\n                    fontSize: \"14px\",\n                    lineHeight: \"20px\",\n                  }\n                }}\n                placeholder=\"Enter Referral Code\"\n                error={!!error}\n                helperText={error ? error.message : null}\n                {...field}\n                ref={null}\n                onChange={e => setReferral(e.target.value)}\n              />\n            )}\n          />\n          <IconButton\n            disabled={disabled || (!!isregistered && !!isregistered.success)}\n            onClick={() => { setOpen(true) }}\n            sx={{ ml: 1, mt: 2.75 }}\n          >\n            <HiArrowNarrowRight />\n          </IconButton>\n        </Box>\n        {open && <>\n          <Stack gap=\"8px\" sx={{ textAlign: \"left\" }}>\n            <Typography sx={{ mt: \"20px\" }} variant=\"TitleMedium\">\n              Join India&apos;s Smartest Developer Community.\n            </Typography>\n            <Typography variant=\"BodyMedium\" color=\"onsurfacevariant.main\">\n              Join the Huddle. We&apos;re cultivating a dynamic developer community filled with like-minded folks, talks & boot camps on the latest trends, brainstorming via hackathons & events, opportunities to get hired and so much more\n            </Typography>\n            <Stack direction=\"row\" sx={{ mt: 3, alignItems: \"center\" }}>\n              <Typography variant=\"HeadlineMedium\" component=\"p\" sx={{ mr: \"12px\", fontWeight: 600 }}>7000+</Typography>\n              <Typography variant=\"TitleMedium\" component=\"p\" color=\"onsurfacevariant.main\">\n                Developers Already Joined\n              </Typography>\n            </Stack>\n            <Stack direction=\"row\" columnGap={2} sx={{ mt: 3, display: \"flex\", flexDirection: \"row\" }}>\n              <OutlinedButton href=\"https://bit.ly/cometwa3\" startIcon={<FaWhatsapp />} variant=\"outlined\" sx={{ mb: \"10px\" }}>\n                {/* <FaWhatsapp size=\"1.5rem\" /> */}\n      {/* <Typography variant=\"LabelLarge\" >\n                  Whatsapp\n                </Typography>\n              </OutlinedButton>\n              <OutlinedButton href=\"https://bit.ly/joincomet\" startIcon={<FaDiscord />} variant=\"outlined\" sx={{ mb: \"10px\" }}>\n                <Typography variant=\"LabelLarge\">\n                  Discord\n                </Typography>\n              </OutlinedButton>\n            </Stack>\n            <Divider sx={{ width: \"50%\", margin: \"0 25%\" }} />\n            <Stack direction=\"row\" columnGap={5} sx={{ mt: 3 }}> */}\n      {/* {referral &&\n                <Stack direction=\"row\" sx={{ alignItems: \"center\", justifyContent: \"center\" }}>\n                  <Typography variant=\"BodyLarge\" color=\"onsurfacevariant.main\" sx={{ mr: \"5px\" }}>\n                    Entered Code :\n                  </Typography>\n                  <Typography variant=\"BodyLarge\"> {referral}</Typography>\n                </Stack>\n              } */}\n      {/* <FilledButton\n                onClick={handleRegister}>\n                <Typography variant=\"LabelLarge\">\n                  Proceed\n                </Typography>\n              </FilledButton>\n            </Stack>\n          </Stack>\n        </> */}\n      {/* } */}\n      {/* </Box> */}\n    </div>\n  );\n}\n\n\n\n"],"names":["Referral","param","isregistered","data","session","useSession","enqueueSnackbar","useSnackbar","watch","useFormContext","details","disabled","Date","regEndDate","getTime","handleRegister","console","log","festId","user","accessToken","check","fetch","process","method","headers","Authorization","body","JSON","stringify","eventId","referral_code","ok","success","json","variant","Router","InternalLinks","concat","type","handleContinue","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","jsx","Typography","paragraph","sx","mb","Box","textAlign","FilledButton","onClick","fontWeight"],"sourceRoot":""}