{"version":3,"file":"static/chunks/4834.e566679b1dd0c9dd.js","mappings":"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","sources":["webpack://_N_E/./src/components/event/ArenaStepper5.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import { Box, Step, StepLabel, Stepper, styled, Typography } from '@mui/material';\nimport React from 'react';\nimport { HiOutlineChevronLeft, HiOutlineChevronRight } from 'react-icons/hi';\nimport ArenaDescription from './ArenaDescription';\nimport ArenaSponsors from './ArenaSponsor';\nimport ArenaSchedule from './ArenaSchedule';\nimport ArenaTracks from './ArenaTracks';\nimport ArenaPrizes from './ArenaPrize';\n// import ArenaTicket from './ArenaTicket';\n// import ArenaOrganiser from './ArenaOrganiser';\nimport { arenaDescription, ReadOnly, arenaSponsorType, arenaTrack, arenaPrize } from './types';\nimport { useFormContext } from 'react-hook-form';\n\nimport { makeStyles } from \"@mui/styles\"\nimport { TextButton } from '@/styles/theme';\n\nconst useStyles = makeStyles({\n    customLabelStyle: {\n        fontWeight: 500,\n        fontSize: \"16px\",\n        lineHeight: \"24px\",\n    }\n});\n\ntype STEPLABELS = \"Event Description\" | \"Sponsors\" | \"Tracks\" | \"Schedule\" | \"Prizes\";\n\nconst StepContainer = styled(\"div\")({\n    padding: \"20px 12px\",\n});\n\n\n\nconst ArenaStepper = ({ readOnly }: ReadOnly) => {\n    const [activeStep, setActiveStep] = React.useState(0);\n    const { watch } = useFormContext();\n    const classes = useStyles();\n    const description: arenaDescription = watch(\"description\");\n    const sponsor: Array<arenaSponsorType> = watch(\"sponsor\") || [];\n    const tracks: Array<arenaTrack> = watch(\"tracks\") || [];\n    const prizes: Array<arenaPrize> = watch(\"prizes\") || [];\n    // console.log(tracks);\n    //   const [value, setValue] = React.useState(0);\n\n    //       const handleChange = (_event: React.SyntheticEvent, newValue: number) => {\n    //     setValue(newValue);\n    //   };\n\n    const steps: STEPLABELS[] = [];\n\n\n    if (description.description) {\n        steps.push(\"Event Description\")\n    }\n\n    if (sponsor.length > 0) {\n        steps.push(\"Sponsors\")\n    }\n\n    if (tracks.length > 0) {\n        steps.push(\"Tracks\")\n    }\n\n    if (prizes.length > 0) {\n        steps.push(\"Prizes\")\n    }\n\n\n\n    const isStepFailed = (label: STEPLABELS): boolean => {\n        switch (label) {\n            case \"Event Description\":\n                return false;\n\n            case \"Sponsors\":\n                return false;\n\n            case \"Schedule\":\n                return false;\n\n            case \"Prizes\":\n                return false;\n\n            case \"Tracks\":\n                return false;\n\n            default:\n                return false;\n        }\n    };\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const getStepContent = (label: STEPLABELS) => {\n        switch (label) {\n\n            case \"Event Description\":\n                return <ArenaDescription readOnly={readOnly} />;\n\n            case \"Sponsors\":\n                return <ArenaSponsors readOnly={readOnly} />;\n\n            case \"Tracks\":\n                return <ArenaTracks readOnly={readOnly} />;\n\n            case \"Schedule\":\n                return <ArenaSchedule readOnly={readOnly} />;\n\n            case \"Prizes\":\n                return <ArenaPrizes readOnly={readOnly} />;\n\n            default:\n                return\n            // return (\n            //   <Typography variant=\"h4\" color=\"error\">\n            //     Oops! An unexpected error has occured\n            //   </Typography>\n            // );\n        }\n    };\n\n    if (!readOnly) {\n        return (\n            <div>Something went wrong</div>\n        )\n    }\n\n    return (\n        <>\n            {activeStep !== steps.length &&\n                <Box sx={{ width: \"100%\" }}>\n                    {/* <Typography sx={{ mb: 2, textAlign: \"center\" }} variant=\"subtitle1\">{steps[activeStep].toUpperCase()}</Typography> */}\n                    <Stepper activeStep={activeStep} alternativeLabel>\n                        {steps.map((label, index) => {\n                            const labelProps: {\n                                error?: boolean;\n                            } = {};\n                            if (isStepFailed(steps[index])) {\n                                labelProps.error = true;\n                            }\n\n                            return (\n                                <Step key={label}>\n                                    <StepLabel classes={{ label: classes.customLabelStyle }} {...labelProps}>{label}</StepLabel>\n                                </Step>\n                            );\n                        })}\n                    </Stepper>\n                    {activeStep === steps.length ? (\n                        <></>\n                    ) : (\n                        <React.Fragment>\n                            {/* <StepLabel classes={{ label: classes.customLabelStyle }} >{label}</StepLabel> */}\n                            <StepContainer sx={{ padding: \"20px\" }}>\n                                {getStepContent(steps[activeStep])}\n                            </StepContainer>\n                            {steps.length > 1 && (\n                                <Box sx={{ display: \"flex\", flexDirection: \"row\" }}>\n                                    <TextButton\n                                        disabled={activeStep === 0}\n                                        onClick={handleBack}\n                                        sx={{ mr: 1 }}\n                                        startIcon={<HiOutlineChevronLeft />}\n                                    >\n                                        <Typography variant=\"LabelLarge\">Back</Typography>\n                                    </TextButton>\n                                    <Box sx={{ flex: \"1 1 auto\" }} />\n                                    <TextButton\n                                        onClick={handleNext}\n                                        disabled={isStepFailed(steps[activeStep]) || (activeStep === steps.length - 1)}\n                                        endIcon={<HiOutlineChevronRight />}\n                                    >\n                                        <Typography variant=\"LabelLarge\">Next</Typography>\n                                    </TextButton>\n                                </Box>\n                            )}\n                        </React.Fragment>\n                    )}\n                </Box>\n            }\n        </>\n    )\n}\n\nexport default ArenaStepper;"],"names":["useStyles","makeStyles","customLabelStyle","fontWeight","fontSize","lineHeight","StepContainer","styled","padding","ArenaStepper","readOnly","param","activeStep","setActiveStep","React","watch","useFormContext","classes","description","sponsor","tracks","prizes","steps","push","length","isStepFailed","handleNext","prevActiveStep","handleBack","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Fragment","jsxs","Box","sx","width","Stepper","alternativeLabel","map","label","index","labelProps","error","Step","StepLabel","getStepContent","ArenaDescription","ArenaSponsors","ArenaTracks","ArenaSchedule","ArenaPrizes","display","flexDirection","TextButton","disabled","onClick","mr","startIcon","HiOutlineChevronLeft","Typography","variant","flex","endIcon","HiOutlineChevronRight","div","__webpack_exports__"],"sourceRoot":""}