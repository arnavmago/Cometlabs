{"version":3,"file":"static/chunks/pages/signup-a8daeb8053795383.js","mappings":"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","sources":["webpack://_N_E/?43bc","webpack://_N_E/./content/Links.ts","webpack://_N_E/./lib/firebase.js","webpack://_N_E/./pages/signup.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/signup\",\n      function () {\n        return require(\"private-next-pages/signup.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/signup\"])\n      });\n    }\n  ","export const InternalLinks = {\n  LANDING_PAGE: \"/\",\n  SIGNIN_PAGE: \"/signin\",\n  SIGNUP_PAGE: \"/signup\",\n  ONBOARDING_PAGE: \"/onboarding\",\n  DEV_DASHBOARD: \"/Dashboards/Dev/\",\n  USER_DASHBOARD: \"/Dashboards/User/\",\n  ADMIN_DASHBOARD: \"/Dashboards/Admin/\",\n\n  EXPLORE_PAGE: \"/Explore/\",\n  ORGANISE_PAGE: \"/Explore/Organise\",\n  LABS_PAGE: \"/Explore/Labs/\",\n\n  CODEARENA_DASHBOARD_LINK: \"/Explore/CodeArena/Dashboard/\",\n  CODEARENA_DASHBOARD_ROUTE: \"/Explore/CodeArena/Dashboard/\",\n  CODEARENA_EDITCODEARENA: \"/Explore/CodeArena/EditCodeArena/\",\n  CODEARENA_PREVIEW: \"/Explore/CodeArena/Preview/\",\n  HACK_DASHBOARD_LINK: \"/Explore/Hack/Dashboard/\",\n  HACK_DASHBOARD_ROUTE: \"/Explore/Hack/Dashboard/\",\n  HACK_EDITHACK: \"/Explore/Hack/EditHack/\",\n  HACK_EDITHACK_ROUTE: \"/Explore/Hack/EditHack/\",\n  HACK_PREVIEW: \"/Explore/Hack/Preview/\",\n\n  BLOGS_PAGE: \"/blog\",\n  CAREERS_PAGE: \"/About/Careers\",\n  COMPANY_PAGE: \"/About/Company\",\n  CONTACT_US_PAGE: \"/About/ContactUs\",\n  REVIEWS_PRESS_PAGE: \"/About/ReviewsPress\",\n  TERMS_PRIVACY_PAGE: \"/About/TermsPrivacy\",\n  TERMS_CONDITIONS_PAGE: \"/About/TermsConditions\",\n  HIRE_DEVS_PAGE: \"/Customers/Hire-Devs\",\n  OUTSOURCE_PAGE: \"/Customers/Outsource\",\n  PRICING_PAGE: \"/Customers/Pricing\",\n  SPONSOR_PAGE: \"/Customers/Sponsor\",\n  EXTENSIONS_PAGE: \"/Product/Extensions\",\n  CHANGE_LOG_PAGE: \"/Product/ChangeLog\",\n  PLAYGROUND_PAGE: \"/Product/Playground\",\n  REQUEST_FEATURE_PAGE: \"/Product/RequestFeature\",\n  STATUS_PAGE: \"/Product/Status\",\n  COMET_PROFILE_PAGE: \"/Developers/Profile\",\n  COMMUNITY_PAGE: \"/Developers/Community/\",\n  EVANGELISTS_PAGE: \"/Developers/Evangelists/\",\n  GET_HIRED_PAGE: \"/Developers/GetHired\",\n\n  PROFILE_PAGE: \"/Dashboards/Dev/\"\n};\n\nexport const externalLinkProps = {\n  target: \"_blank\",\n  rel: \"noopener noreferrer\",\n};\n\nexport const ExternalLinks = {\n  BLOGS_PAGE: {\n    href: \"https://cometlabs.in/About/Blogs\",\n    ...externalLinkProps,\n  },\n  LABS_PAGE: {\n    href: \"https://cometlabs.in/lab/\",\n    ...externalLinkProps,\n  },\n  CAREERS_PAGE: {\n    href: \"https://cometlabs.in/About/Careers\",\n    ...externalLinkProps,\n  },\n  COMPANY_PAGE: {\n    href: \"https://cometlabs.in/About/Company\",\n    ...externalLinkProps,\n  },\n  CONTACT_US_PAGE: {\n    href: \"https://cometlabs.in/About/ContactUs\",\n    ...externalLinkProps,\n  },\n  REVIEWS_PRESS_PAGE: {\n    href: \"https://cometlabs.in/About/ReviewsPress\",\n    ...externalLinkProps,\n  },\n  TERMS_PRIVACY_PAGE: {\n    href: \"https://cometlabs.in/About/TermsPrivacy\",\n    ...externalLinkProps,\n  },\n  TERMS_CONDITIONS_PAGE: {\n    href: \"https://cometlabs.in/About/TermsConditions\",\n    ...externalLinkProps,\n  },\n  HIRE_DEVS_PAGE: {\n    href: \"https://cometlabs.in/Customers/Hire-Devs\",\n    ...externalLinkProps,\n  },\n  OUTSOURCE_PAGE: {\n    href: \"https://cometlabs.in/Customers/Outsource\",\n    ...externalLinkProps,\n  },\n  PRICING_PAGE: {\n    href: \"https://cometlabs.in/Customers/Pricing\",\n    ...externalLinkProps,\n  },\n  SPONSOR_PAGE: {\n    href: \"https://cometlabs.in/Customers/Sponsor\",\n    ...externalLinkProps,\n  },\n  EXTENSIONS_PAGE: {\n    href: \"https://cometlabs.in/Product/Extensions\",\n    ...externalLinkProps,\n  },\n  CHANGE_LOG_PAGE: {\n    href: \"https://cometlabs.in/Product/ChangeLog\",\n    ...externalLinkProps,\n  },\n  PLAYGROUND_PAGE: {\n    href: \"https://cometlabs.in/Product/Playground\",\n    ...externalLinkProps,\n  },\n  REQUEST_FEATURE_PAGE: {\n    href: \"https://cometlabs.in/Product/RequestFeature\",\n    ...externalLinkProps,\n  },\n  STATUS_PAGE: {\n    href: \"https://cometlabs.in/Product/Status\",\n    ...externalLinkProps,\n  },\n  COMET_PROFILE_PAGE: {\n    href: \"https://cometlabs.in/Developers/Profile\",\n    ...externalLinkProps,\n  },\n  COMMUNITY_PAGE: {\n    href: \"https://cometlabs.in/Developers/Community\",\n    ...externalLinkProps,\n  },\n  EVANGELISTS_PAGE: {\n    href: \"https://cometlabs.in/Developers/Evangelists\",\n    ...externalLinkProps,\n  },\n  GET_HIRED_PAGE: {\n    href: \"https://cometlabs.in/Developers/GetHired\",\n    ...externalLinkProps,\n  },\n  COMETLABS_FACEBOOK: {\n    href: \"https://www.facebook.com/cometlabs.in/\",\n    ...externalLinkProps,\n  },\n  COMETLABS_INSTAGRAM: {\n    href: \"https://www.instagram.com/cometlabs/\",\n    ...externalLinkProps,\n  },\n  COMETLABS_LINKEDIN: {\n    href: \"https://www.linkedin.com/company/cometlabs/\",\n    ...externalLinkProps,\n  },\n  COMETLABS_TWITTER: {\n    href: \"https://twitter.com/cometlabs_ai\",\n    ...externalLinkProps,\n  },\n  COMETLABS_LINKTREE: {\n    href: \"https://linktr.ee/cometlabs\",\n    ...externalLinkProps,\n  },\n  COMETLABS_YOUTUBE: {\n    href: \"https://www.youtube.com/channel/UC9dP1nUtKZnP4Q3YtLTXVLQ\",\n    ...externalLinkProps,\n  },\n};\n","import { getAuth, RecaptchaVerifier } from \"firebase/auth\";\nimport { initializeApp } from 'firebase/app';\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBaiR9X2CZC4mNYeI1iaxI1DIQUQ7iuR2o\",\n    authDomain: \"cometlabs.firebaseapp.com\",\n    projectId: \"cometlabs\",\n    storageBucket: \"cometlabs.appspot.com\",\n    messagingSenderId: \"798450899254\",\n    appId: \"1:798450899254:web:f803d941581c72b60f7b97\"\n}\n\nconst app = initializeApp(firebaseConfig)\nvar auth = getAuth()\nexport { auth, app }","// import Image from \"next/image\";\nimport { useRouter } from \"next/router\";\nimport { useSnackbar } from \"notistack\";\nimport * as React from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\n\nimport {\n  SignupData\n} from \"@/backend/functions\";\nimport { InternalLinks } from \"@/content/Links\";\nimport Box from \"@mui/material/Box\";\nimport Container from \"@mui/material/Container\";\nimport Link from \"@mui/material/Link\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport { GetServerSideProps } from \"next\";\nimport { BuiltInProviderType } from \"next-auth/providers\";\nimport * as NextAuth from \"next-auth/react\";\nimport { SiGithub, SiGoogle } from \"react-icons/si\";\nimport Head from \"next/head\";\nimport { auth } from \"../lib/firebase\";\nimport { ConfirmationResult, RecaptchaVerifier, signInWithPhoneNumber } from \"firebase/auth\";\nimport { Checkbox, Divider, Grid, IconButton, MenuItem } from \"@mui/material\";\nimport { CardContainer, FilledButton, OutlinedButton, TextButton } from \"@/styles/theme\";\nimport MuiPhoneNumber from \"material-ui-phone-number\";\n\nexport const getServerSideProps: GetServerSideProps = async (context) => {\n  const { req, res } = context;\n  const session = await NextAuth.getSession({ req });\n  if (session && res && session.user) {\n    return {\n      redirect: {\n        destination: InternalLinks.LANDING_PAGE,\n        permanent: false,\n      },\n    };\n  }\n  return {\n    props: {\n      providers: await NextAuth.getProviders(),\n    },\n  };\n};\n\ninterface SignInProps {\n  providers: Record<\n    NextAuth.LiteralUnion<BuiltInProviderType, string>,\n    NextAuth.ClientSafeProvider\n  >;\n  csrfToken: \"\",\n}\n\nconst DEFAULT: SignupData = {\n  email: \"\",\n  password: \"\",\n  confirm: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  mobile: \"\",\n  mobileLocal: 0,\n  countryCode: \"\",\n  role: \"\",\n  otpm: \"\",\n  otpe: \"\",\n}\n\nexport default function SignUp(props: SignInProps) {\n  const { handleSubmit, control, watch, formState: { isSubmitting } } = useForm<SignupData>();\n  const { providers } = props;\n  const { enqueueSnackbar } = useSnackbar();\n  const password = React.useRef({});\n  password.current = watch(\"password\");\n  const router = useRouter();\n  // const [signtype, setType] = React.useState(true);\n  // const [sign_password, setSignPassword] = React.useState(\"\");\n  const [data, setData] = React.useState<SignupData>(DEFAULT);\n  const [userData, setUserData] = React.useState<Omit<SignupData, \"confirm\"> | null>(null);\n  const [confResult, setConfResult] = React.useState<ConfirmationResult>();\n  const [status, setStatus] = React.useState<\"signup\" | \"otp\">(\"signup\");\n  const [otpVerified, setOtpVerified] = React.useState<boolean>(false);\n  const [emailSuccess, setemailSuccess] = React.useState<boolean>(false);\n  const [otpMobileVerified, setOtpMobileVerified] = React.useState<boolean>(false);\n  const [mobileSuccess, setmobileSuccess] = React.useState<boolean>(false);\n  const [checked, setchecked] = React.useState<boolean>(false);\n\n  const sendOtp = async (data: string, type: string) => {\n    try {\n      let res = await fetch(\n        process.env.NEXT_PUBLIC_API_URL + \"/api/signup/mailotp\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json;charset=utf-8\",\n          },\n          body: JSON.stringify({ email: data }),\n        }\n      );\n      if (res.ok) {\n\n        const mailer = await res.json();\n        if (type === \"RESEND\" && mailer.success) {\n          enqueueSnackbar(\"OTP sent to \" + data);\n        } else return mailer;\n      } else {\n        throw new Error(\"ON OTP_SEND: Bad response from server\");\n      }\n    } catch (error) {\n      console.log(\"Oops! Unable to send OTP.\");\n    }\n  };\n\n  const handleEmailOtpSend = async (email: string) => {\n    if (userData) {\n      const data = userData;\n      data.email = email;\n      setUserData(data);\n      const { error } = await sendOtp(email, \"\");\n      if (!!error) {\n        enqueueSnackbar(error, { variant: \"error\" });\n      } else {\n        enqueueSnackbar(\"OTP sent to \" + email, { variant: \"info\" });\n        setOtpVerified(true);\n      }\n    }\n  }\n\n  const handleSignupComplete = async (_e: any) => {\n    if (userData === null) return;\n    try {\n      let res = await fetch(\n        process.env.NEXT_PUBLIC_API_URL + \"/api/signupwithpassword\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json;charset=utf-8\",\n          },\n          body: JSON.stringify({ ...userData }),\n        }\n      );\n      if (res.ok) {\n        await (NextAuth.signIn(\"credentials\", {\n          username: userData.email,\n          password: userData.password,\n          callbackUrl: process.env.NEXT_PUBLIC_AUTH_CALLBACK_URL || \"https://cometlabs.in/onboarding/\"\n        }))\n        router.push(InternalLinks.ONBOARDING_PAGE);\n      } else {\n        throw new Error(\"ON SIGNUP_COMPLETE: Bad response from server\");\n      }\n    } catch (error) {\n      enqueueSnackbar(\"User signup failed\", { variant: \"error\" });\n    }\n  };\n\n  const OtpForm = (\n    <>\n      <Grid container spacing={2} sx={{\n        my: \"auto\",\n        marginTop: 2,\n        width: \"100%\",\n        justifyContent: \"center\",\n      }}>\n        <Grid item container xs={12} md={8} spacing={2} sx={{ width: \"100%\" }}>\n          <Grid item xs={12} sm={7}>\n            <Controller\n              name=\"email\"\n              control={control}\n              rules={{\n                required: \"Email required\",\n                pattern: {\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                  message: \"Invalid email\",\n                },\n              }}\n              render={({ field, fieldState: { error } }) => {\n                return (\n                  <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    sx={{ mr: 1 }}\n                    inputProps={{\n                      style: {\n                        fontWeight: 400,\n                        fontSize: \"16px\",\n                        lineHeight: \"24px\",\n                      }\n                    }}\n                    InputLabelProps={{\n                      style: {\n                        fontWeight: 500,\n                        fontSize: \"14px\",\n                        lineHeight: \"20px\",\n                      }\n                    }}\n                    InputProps={{\n                      endAdornment: (\n                        <OutlinedButton\n                          size=\"small\"\n                          color=\"primary\"\n                          variant=\"outlined\"\n                          sx={{ borderRadius: \"4px\" }}\n                          onClick={() => { handleEmailOtpSend(field.value) }}\n                        >\n                          <Typography variant=\"LabelMedium\">Verify</Typography>\n                        </OutlinedButton>\n                      ),\n                    }}\n                    label=\"Email Address\"\n                    autoComplete=\"email\"\n                    autoFocus\n                    error={!!error}\n                    helperText={error ? error.message : null}\n                    {...field}\n                    ref={null}\n                  // onChange={e => { setSignEmail(field.value), console.log(sign_email) }}\n                  />\n                )\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} sm={5}>\n            <Controller\n              name=\"otpe\"\n              control={control}\n              defaultValue=\"\"\n              rules={{\n                required: \"Otp required\",\n              }}\n              render={({ field, fieldState: { error } }) => (\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  label=\"Enter OTP\"\n                  type=\"number\"\n                  disabled={!otpVerified}\n                  inputProps={{\n                    style: {\n                      fontWeight: 400,\n                      fontSize: \"16px\",\n                      lineHeight: \"24px\",\n                    }\n                  }}\n                  InputLabelProps={{\n                    style: {\n                      fontWeight: 500,\n                      fontSize: \"14px\",\n                      lineHeight: \"20px\",\n                    }\n                  }}\n                  InputProps={{\n                    endAdornment: (\n                      <TextButton\n                        color=\"primary\"\n                        disabled={!otpVerified}\n                        onClick={async () => {\n                          let options = {\n                            method: \"POST\",\n                            headers: {\n                              \"Content-Type\": \"application/json;charset=utf-8\",\n                            },\n                            body: JSON.stringify({ email: data?.email, otp: field.value }),\n                          };\n\n                          try {\n                            let res = await fetch(\n                              process.env.NEXT_PUBLIC_API_URL + \"/api/verifyotp\",\n                              options\n                            );\n                            if (res.ok) {\n                              const verified = await res.json();\n                              if (!!verified.temporaryToken) {\n                                setemailSuccess(true);\n                                enqueueSnackbar(\"OTP verified\", { variant: \"success\" });\n                              } else {\n                                throw new Error(\"ON OTP_VERIFICATION: NO TEMP\");\n                              }\n                            } else {\n                              throw new Error(\"ON OTP_VERIFICATION: Bad response from server\");\n                            }\n                          } catch (error) {\n                            enqueueSnackbar(\"Couldn't verify OTP\", { variant: \"error\" });\n                          }\n                        }}\n                      >\n                        <Typography variant=\"LabelMedium\">Submit</Typography>\n                      </TextButton>\n                    ),\n                  }}\n                  error={!!error}\n                  helperText={error ? error.message : null}\n                  {...field}\n                  ref={null}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12} sm={7}>\n            <Controller\n              name=\"mobileLocal\"\n              control={control}\n              rules={{\n                required: \"Mobile required\",\n              }}\n              render={({ field, fieldState: { error } }) => (\n                <MuiPhoneNumber\n                  margin=\"normal\"\n                  required\n                  defaultCountry={'in'}\n                  fullWidth\n                  autoFormat\n                  sx={{\n                    '& .MuiIconButton-sizeMedium': {\n                      width: \"24px\",\n                      height: '30px',\n                      \"& .margin\": {\n                        width: \"24px\",\n                        height: '30px',\n                      }\n                    }\n                  }}\n                  variant=\"outlined\"\n                  inputProps={{\n                    style: {\n                      fontWeight: 400,\n                      fontSize: \"16px\",\n                      lineHeight: \"24px\",\n                    }\n                  }}\n                  InputLabelProps={{\n                    style: {\n                      fontWeight: 500,\n                      fontSize: \"14px\",\n                      lineHeight: \"20px\",\n                    }\n                  }}\n                  InputProps={{\n                    endAdornment: (\n                      <OutlinedButton\n                        variant=\"outlined\"\n                        size=\"small\"\n                        color=\"primary\"\n                        id=\"newid\"\n                        onClick={(_) => {\n                          const mobile = field.value.toString().replaceAll(' ', '').replaceAll('-', '')\n                          const formData = { ...data, mobile }\n\n                          let verify = new RecaptchaVerifier(\"newid\", {\n                            'size': 'invisible',\n                            'callback': () => { },\n                            'expired-callback': () => { }\n                          }, auth);\n\n                          signInWithPhoneNumber(auth, mobile, verify).then((\n                            confirmationResult\n                          ) => {\n                            setConfResult(confirmationResult);\n                            setStatus(\"otp\");\n                            setUserData(formData);\n                            setOtpMobileVerified(true)\n                          })\n                            .catch((err: any) => {\n                              console.log(err);\n                            });\n                        }}\n                      >\n                        <Typography variant=\"LabelMedium\">Verify</Typography>\n                      </OutlinedButton>\n                    ),\n                  }}\n                  error={!!error}\n                  helperText={error ? error.message : null}\n                  {...field}\n                  ref={null}\n                />\n\n              )}\n            />\n          </Grid>\n          <Grid item xs={12} sm={5}>\n            <Controller\n              name=\"otpm\"\n              control={control}\n              defaultValue=\"\"\n              rules={{\n                required: \"Otp required\",\n              }}\n              render={({ field, fieldState: { error } }) => (\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  label=\"Enter OTP\"\n                  type=\"number\"\n                  disabled={!otpMobileVerified}\n                  inputProps={{\n                    style: {\n                      fontWeight: 400,\n                      fontSize: \"16px\",\n                      lineHeight: \"24px\",\n                    }\n                  }}\n                  InputLabelProps={{\n                    style: {\n                      fontWeight: 500,\n                      fontSize: \"14px\",\n                      lineHeight: \"20px\",\n                    }\n                  }}\n                  InputProps={{\n                    endAdornment: (\n                      <TextButton\n                        color=\"primary\"\n                        disabled={!otpMobileVerified}\n                        onClick={() => {\n                          confResult!.confirm(field.value).then(() => {\n                            setmobileSuccess(true)\n                            enqueueSnackbar(\"OTP verified\", { variant: \"success\" });\n                          }).catch((_error: any) => {\n                          });\n                        }}\n                      >\n                        <Typography variant=\"LabelMedium\">Submit</Typography>\n                      </TextButton>\n                    ),\n                  }}\n                  error={!!error}\n                  helperText={error ? error.message : null}\n                  {...field}\n                  ref={null}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FilledButton\n              color=\"primary\"\n              disabled={!emailSuccess || !mobileSuccess}\n              sx={{ mt: 3, mb: 2, float: \"right\" }}\n              onClick={handleSignupComplete}\n            >\n              <Typography variant=\"LabelLarge\">Submit</Typography>\n            </FilledButton>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n\n\n  const getIcon = (name: string) => {\n    switch (name) {\n      case \"Google\":\n        return <SiGoogle fontSize=\"2rem\" />;\n      case \"GitHub\":\n        return <SiGithub fontSize=\"2rem\" />;\n      default:\n        return <SiGoogle />;\n    }\n  };\n\n  const onSubmit = async (data: SignupData) => {\n    const formData = { ...data };\n    setData(formData);\n    setUserData(formData);\n    setStatus(\"otp\");\n  };\n\n  const SignupForm = (\n    <Grid container\n      sx={{\n        marginTop: \"66px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        width: \"100%\",\n      }}\n    >\n      <Grid item component=\"form\" xs={11} sm={8} sx={{\n        width: \"100%\", \"& .MuiFormHelperText-root \": {\n          fontWeight: 500,\n          fontSize: \"11px\",\n          lineHeight: \"16px\",\n        }\n      }} onSubmit={handleSubmit(onSubmit)} noValidate>\n        <div style={{ display: \"flex\" }}>\n          <Typography component=\"span\" sx={{ fontWeight: 500, pr: 3, typography: { xs: 'TitleMedium', md: 'TitleLarge' } }}>\n            {\"Signup for\"}\n          </Typography>\n          <Controller\n            name=\"role\"\n            defaultValue={\"Dev\"}\n            control={control}\n            rules={{\n              required: \"Please provide a title for your arena\",\n            }}\n            render={({ field: { ref, ...field } }) => (\n              <TextField style={{ paddingBottom: \"0px\", width: \"150px\", maxWidth: \"200px\" }}\n                size=\"small\"\n                select\n                variant=\"standard\"\n                defaultValue=\"Dev\"\n                inputProps={{\n                  style: {\n                    fontWeight: 400,\n                    fontSize: \"16px\",\n                    lineHeight: \"24px\",\n                  }\n                }}\n                InputLabelProps={{\n                  style: {\n                    fontWeight: 500,\n                    fontSize: \"14px\",\n                    lineHeight: \"20px\",\n                  }\n                }}\n                // onChange={(e) => { handleFreeLabsbyType(e.target.value) }}\n                ref={null}\n                {...field}\n              >\n                <MenuItem value=\"Dev\">Developer</MenuItem>\n                <MenuItem disabled value=\"Biz\">Business</MenuItem>\n                <MenuItem disabled value=\"Org\">Organiser</MenuItem>\n              </TextField>\n            )}\n          />\n        </div>\n        <Stack direction=\"row\" spacing={1} sx={{ alignItems: \"center\", mt: 1, mb: 2 }}>\n          <Typography variant=\"BodyLarge\" align=\"center\">\n            Or\n          </Typography>\n          <Typography><Link href={InternalLinks.SIGNIN_PAGE} variant=\"BodyLarge\">\n            {\" login\"}\n          </Link></Typography>\n          <Typography variant=\"BodyLarge\" align=\"center\">\n            to an existing account\n          </Typography>\n        </Stack>\n        <Stack direction=\"row\" spacing={2} alignItems=\"baseline\">\n          <Controller\n            name=\"firstName\"\n            control={control}\n            defaultValue=\"\"\n            rules={{\n              required: \"First Name required\",\n            }}\n            render={({ field, fieldState: { error } }) => (\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                label=\"First Name\"\n                error={!!error}\n                helperText={error ? error.message : null}\n                inputProps={{\n                  style: {\n                    fontWeight: 400,\n                    fontSize: \"16px\",\n                    lineHeight: \"24px\",\n                  }\n                }}\n                InputLabelProps={{\n                  style: {\n                    fontWeight: 500,\n                    fontSize: \"14px\",\n                    lineHeight: \"20px\",\n                  }\n                }}\n                {...field}\n                ref={null}\n              />\n            )}\n          />\n          <Controller\n            name=\"lastName\"\n            control={control}\n            defaultValue=\"\"\n            rules={{\n              required: \"Last Name required\",\n            }}\n            render={({ field, fieldState: { error } }) => (\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                label=\"Last Name\"\n                error={!!error}\n                inputProps={{\n                  style: {\n                    fontWeight: 400,\n                    fontSize: \"16px\",\n                    lineHeight: \"24px\",\n                  }\n                }}\n                InputLabelProps={{\n                  style: {\n                    fontWeight: 500,\n                    fontSize: \"14px\",\n                    lineHeight: \"20px\",\n                  }\n                }}\n                helperText={error ? error.message : null}\n                {...field}\n                ref={null}\n              />\n            )}\n          />\n        </Stack>\n        <Controller\n          name=\"email\"\n          control={control}\n          defaultValue=\"\"\n          rules={{\n            required: \"Email required\",\n            pattern: {\n              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n              message: \"Invalid email\",\n            },\n          }}\n          render={({ field, fieldState: { error } }) => {\n            return (\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                inputProps={{\n                  style: {\n                    fontWeight: 400,\n                    fontSize: \"16px\",\n                    lineHeight: \"24px\",\n                  }\n                }}\n                InputLabelProps={{\n                  style: {\n                    fontWeight: 500,\n                    fontSize: \"14px\",\n                    lineHeight: \"20px\",\n                  }\n                }}\n                label=\"Email Address\"\n                autoComplete=\"email\"\n                autoFocus\n                error={!!error}\n                helperText={error ? error.message : null}\n                {...field}\n                ref={null}\n              // onChange={e => { setSignEmail(field.value), console.log(sign_email) }}\n              />\n            )\n          }}\n        />\n        <Stack direction=\"row\" spacing={2} alignItems=\"baseline\">\n          <Controller\n            name=\"password\"\n            control={control}\n            defaultValue=\"\"\n            rules={{\n              required: \"Password required\",\n              minLength: {\n                value: 8,\n                message: \"Password must be at least 8 characters\",\n              },\n            }}\n            render={({ field, fieldState: { error } }) => {\n              // setSignPassword(field.value)\n              return (\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  inputProps={{\n                    style: {\n                      fontWeight: 400,\n                      fontSize: \"16px\",\n                      lineHeight: \"24px\",\n                    }\n                  }}\n                  InputLabelProps={{\n                    style: {\n                      fontWeight: 500,\n                      fontSize: \"14px\",\n                      lineHeight: \"20px\",\n                    }\n                  }}\n                  autoComplete=\"current-password\"\n                  error={!!error}\n                  helperText={error ? error.message : null}\n                  {...field}\n                  ref={null}\n                />\n              )\n            }}\n          />\n          <Controller\n            name=\"confirm\"\n            control={control}\n            defaultValue=\"\"\n            rules={{\n              required: \"Required\",\n              validate: (value) =>\n                value === password.current || \"Password doesn't match\",\n            }}\n            render={({ field, fieldState: { error } }) => (\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"password-confirm\"\n                autoComplete=\"current-password\"\n                error={!!error}\n                inputProps={{\n                  style: {\n                    fontWeight: 400,\n                    fontSize: \"16px\",\n                    lineHeight: \"24px\",\n                  }\n                }}\n                InputLabelProps={{\n                  style: {\n                    fontWeight: 500,\n                    fontSize: \"14px\",\n                    lineHeight: \"20px\",\n                  }\n                }}\n                helperText={error ? error.message : null}\n                {...field}\n                ref={null}\n              />\n            )}\n          />\n        </Stack>\n        <Stack direction=\"row\" sx={{ display: 'flex', flexDirection: { xs: \"column\", md: \"row\" }, justifyContent: 'space-between', alignItems: 'stretch', mt: 3 }}>\n          <div>\n            <Checkbox checked={checked} onClick={() => { setchecked(!checked) }} />\n            <Typography variant=\"LabelSmall\">Agree to our <Link href=\"https://cometlabs.in/About/TermsConditions\" target=\"_blank\">Terms & Conditions</Link> and <Link href=\"https://cometlabs.in/About/TermsPrivacy\" target=\"_blank\">Privacy Policy</Link></Typography>\n          </div>\n          <FilledButton\n            type=\"submit\"\n            variant=\"contained\"\n            sx={{ mt: 3 }}\n            disabled={isSubmitting || !checked}\n          >\n            <Typography variant=\"LabelMedium\">\n              {isSubmitting ? \"Submitting...\" : \"Submit\"}\n            </Typography>\n          </FilledButton>\n        </Stack>\n        {/* <Stack direction=\"row\" justifyContent=\"space-between\" sx={{ mt: \"44px\", mb: \"38px\" }}> */}\n        <Divider sx={{ mt: \"34px\", mb: \"28px\" }} color=\"onsurfacevariant.main\">\n          <Typography variant=\"LabelLarge\">Or Sign up with</Typography>\n        </Divider>\n        {/* </Stack> */}\n        <Stack direction=\"row\" columnGap={1} sx={{ mb: \"45px\", justifyContent: \"center\" }}>\n          {Object.values(providers).map((provider) => {\n            const providerId = String(provider.name).toLowerCase();\n            if (providerId !== \"credentials\") {\n              return (\n                <IconButton\n                  onClick={() => NextAuth.signIn(providerId)}\n                  key={provider.name}\n                  color=\"inherit\"\n                >\n                  {getIcon(provider.name)}\n                </IconButton>\n              );\n            }\n          })}\n        </Stack>\n      </Grid>\n    </Grid>\n  );\n\n  return (\n    <>\n      <Head>\n        <title>Signup | COMETLABS</title>\n      </Head>\n      <Box sx={{ width: \"100%\", minHeight: \"100vh\" }}>\n        <Container component=\"main\" sx={{\n          position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}>\n          <CardContainer sx={{ width: \"100%\", border: 0, backgroundColor: \"tempcolor.main\" }}>\n            {status === \"signup\" && SignupForm}\n            {status === \"otp\" && OtpForm}\n          </CardContainer>\n        </Container>\n      </Box>\n    </>\n  );\n}\n"],"names":["window","__NEXT_P","push","__webpack_require__","InternalLinks","LANDING_PAGE","SIGNIN_PAGE","SIGNUP_PAGE","ONBOARDING_PAGE","DEV_DASHBOARD","USER_DASHBOARD","ADMIN_DASHBOARD","EXPLORE_PAGE","ORGANISE_PAGE","LABS_PAGE","CODEARENA_DASHBOARD_LINK","CODEARENA_DASHBOARD_ROUTE","CODEARENA_EDITCODEARENA","CODEARENA_PREVIEW","HACK_DASHBOARD_LINK","HACK_DASHBOARD_ROUTE","HACK_EDITHACK","HACK_EDITHACK_ROUTE","HACK_PREVIEW","BLOGS_PAGE","CAREERS_PAGE","COMPANY_PAGE","CONTACT_US_PAGE","REVIEWS_PRESS_PAGE","TERMS_PRIVACY_PAGE","TERMS_CONDITIONS_PAGE","HIRE_DEVS_PAGE","OUTSOURCE_PAGE","PRICING_PAGE","SPONSOR_PAGE","EXTENSIONS_PAGE","CHANGE_LOG_PAGE","PLAYGROUND_PAGE","REQUEST_FEATURE_PAGE","STATUS_PAGE","COMET_PROFILE_PAGE","COMMUNITY_PAGE","EVANGELISTS_PAGE","GET_HIRED_PAGE","PROFILE_PAGE","externalLinkProps","target","rel","ExternalLinks","href","COMETLABS_FACEBOOK","COMETLABS_INSTAGRAM","COMETLABS_LINKEDIN","COMETLABS_TWITTER","COMETLABS_LINKTREE","COMETLABS_YOUTUBE","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","DEFAULT","email","password","confirm","firstName","lastName","mobile","mobileLocal","countryCode","role","otpm","otpe","SignUp","props","handleSubmit","control","watch","formState","isSubmitting","useForm","providers","enqueueSnackbar","useSnackbar","React","current","router","useRouter","data","setData","userData","setUserData","confResult","setConfResult","status","setStatus","otpVerified","setOtpVerified","emailSuccess","setemailSuccess","otpMobileVerified","setOtpMobileVerified","mobileSuccess","setmobileSuccess","checked","setchecked","sendOtp","type","res","fetch","process","method","headers","body","JSON","stringify","ok","mailer","json","success","error","console","log","handleEmailOtpSend","variant","handleSignupComplete","_e","NextAuth","username","callbackUrl","OtpForm","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Fragment","Grid","container","spacing","sx","my","marginTop","width","justifyContent","jsxs","item","xs","md","sm","Controller","name","rules","required","pattern","value","message","render","field","fieldState","param","TextField","margin","fullWidth","id","mr","inputProps","style","fontWeight","fontSize","lineHeight","InputLabelProps","InputProps","endAdornment","OutlinedButton","size","color","borderRadius","onClick","Typography","label","autoComplete","autoFocus","helperText","ref","defaultValue","disabled","TextButton","options","otp","verified","temporaryToken","MuiPhoneNumber","defaultCountry","autoFormat","height","toString","replaceAll","formData","verify","RecaptchaVerifier","signInWithPhoneNumber","then","confirmationResult","catch","err","FilledButton","mt","mb","float","getIcon","SiGoogle","SiGithub","onSubmit","SignupForm","display","flexDirection","alignItems","component","noValidate","div","pr","typography","paddingBottom","maxWidth","select","MenuItem","Stack","direction","align","Link","minLength","validate","Checkbox","Divider","columnGap","Object","values","map","providerId","String","provider","toLowerCase","IconButton","Head","title","Box","minHeight","Container","position","top","left","transform","CardContainer","border","backgroundColor"],"sourceRoot":""}